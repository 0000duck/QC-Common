//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.235
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace QuantumConcepts.Common.QCConnectWS {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://quantumconceptscorp.com/connect/", ConfigurationName="QCConnectWS.ServiceSoap")]
    public interface ServiceSoap {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://quantumconceptscorp.com/connect/CreateErrorReport", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        QuantumConcepts.Common.QCConnectWS.ErrorReport CreateErrorReport(string applicationKey, string deviceUniqueID, string code, string message, string stackTrace);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://quantumconceptscorp.com/connect/CreateErrorReport", ReplyAction="*")]
        System.IAsyncResult BeginCreateErrorReport(string applicationKey, string deviceUniqueID, string code, string message, string stackTrace, System.AsyncCallback callback, object asyncState);
        
        QuantumConcepts.Common.QCConnectWS.ErrorReport EndCreateErrorReport(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://quantumconceptscorp.com/connect/CreateFeedback", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        QuantumConcepts.Common.QCConnectWS.Feedback CreateFeedback(string applicationKey, string deviceUniqueID, string emailAddress, string subject, string message);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://quantumconceptscorp.com/connect/CreateFeedback", ReplyAction="*")]
        System.IAsyncResult BeginCreateFeedback(string applicationKey, string deviceUniqueID, string emailAddress, string subject, string message, System.AsyncCallback callback, object asyncState);
        
        QuantumConcepts.Common.QCConnectWS.Feedback EndCreateFeedback(System.IAsyncResult result);
        
        // CODEGEN: Generating message contract since message CreateDownloadLogRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://quantumconceptscorp.com/connect/CreateDownloadLog", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        QuantumConcepts.Common.QCConnectWS.CreateDownloadLogResponse CreateDownloadLog(QuantumConcepts.Common.QCConnectWS.CreateDownloadLogRequest request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://quantumconceptscorp.com/connect/CreateDownloadLog", ReplyAction="*")]
        System.IAsyncResult BeginCreateDownloadLog(QuantumConcepts.Common.QCConnectWS.CreateDownloadLogRequest request, System.AsyncCallback callback, object asyncState);
        
        QuantumConcepts.Common.QCConnectWS.CreateDownloadLogResponse EndCreateDownloadLog(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://quantumconceptscorp.com/connect/RegisterApplicationForDevice", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        QuantumConcepts.Common.QCConnectWS.ApplicationRegistration RegisterApplicationForDevice(string firstName, string lastName, string emailAddress, string applicationKey, int major, int minor, int build, int revision, string deviceUniqueID);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://quantumconceptscorp.com/connect/RegisterApplicationForDevice", ReplyAction="*")]
        System.IAsyncResult BeginRegisterApplicationForDevice(string firstName, string lastName, string emailAddress, string applicationKey, int major, int minor, int build, int revision, string deviceUniqueID, System.AsyncCallback callback, object asyncState);
        
        QuantumConcepts.Common.QCConnectWS.ApplicationRegistration EndRegisterApplicationForDevice(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://quantumconceptscorp.com/connect/RegisterApplicationForDevice2", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        QuantumConcepts.Common.QCConnectWS.ApplicationRegistration RegisterApplicationForDevice2(string firstName, string lastName, string emailAddress, string displayName, string applicationKey, int major, int minor, int build, int revision, string deviceUniqueID);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://quantumconceptscorp.com/connect/RegisterApplicationForDevice2", ReplyAction="*")]
        System.IAsyncResult BeginRegisterApplicationForDevice2(string firstName, string lastName, string emailAddress, string displayName, string applicationKey, int major, int minor, int build, int revision, string deviceUniqueID, System.AsyncCallback callback, object asyncState);
        
        QuantumConcepts.Common.QCConnectWS.ApplicationRegistration EndRegisterApplicationForDevice2(System.IAsyncResult result);
        
        // CODEGEN: Generating message contract since message CheckForUpgradeRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://quantumconceptscorp.com/connect/CheckForUpgrade", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        QuantumConcepts.Common.QCConnectWS.CheckForUpgradeResponse CheckForUpgrade(QuantumConcepts.Common.QCConnectWS.CheckForUpgradeRequest request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://quantumconceptscorp.com/connect/CheckForUpgrade", ReplyAction="*")]
        System.IAsyncResult BeginCheckForUpgrade(QuantumConcepts.Common.QCConnectWS.CheckForUpgradeRequest request, System.AsyncCallback callback, object asyncState);
        
        QuantumConcepts.Common.QCConnectWS.CheckForUpgradeResponse EndCheckForUpgrade(System.IAsyncResult result);
        
        // CODEGEN: Generating message contract since message CreateLicenseForPurchaseRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://quantumconceptscorp.com/connect/CreateLicenseForPurchase", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        QuantumConcepts.Common.QCConnectWS.CreateLicenseForPurchaseResponse CreateLicenseForPurchase(QuantumConcepts.Common.QCConnectWS.CreateLicenseForPurchaseRequest request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://quantumconceptscorp.com/connect/CreateLicenseForPurchase", ReplyAction="*")]
        System.IAsyncResult BeginCreateLicenseForPurchase(QuantumConcepts.Common.QCConnectWS.CreateLicenseForPurchaseRequest request, System.AsyncCallback callback, object asyncState);
        
        QuantumConcepts.Common.QCConnectWS.CreateLicenseForPurchaseResponse EndCreateLicenseForPurchase(System.IAsyncResult result);
        
        // CODEGEN: Generating message contract since message EmailLicenseRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://quantumconceptscorp.com/connect/EmailLicense", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        QuantumConcepts.Common.QCConnectWS.EmailLicenseResponse EmailLicense(QuantumConcepts.Common.QCConnectWS.EmailLicenseRequest request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://quantumconceptscorp.com/connect/EmailLicense", ReplyAction="*")]
        System.IAsyncResult BeginEmailLicense(QuantumConcepts.Common.QCConnectWS.EmailLicenseRequest request, System.AsyncCallback callback, object asyncState);
        
        QuantumConcepts.Common.QCConnectWS.EmailLicenseResponse EndEmailLicense(System.IAsyncResult result);
        
        // CODEGEN: Generating message contract since message ActivateLicenseRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://quantumconceptscorp.com/connect/ActivateLicense", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        QuantumConcepts.Common.QCConnectWS.ActivateLicenseResponse ActivateLicense(QuantumConcepts.Common.QCConnectWS.ActivateLicenseRequest request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://quantumconceptscorp.com/connect/ActivateLicense", ReplyAction="*")]
        System.IAsyncResult BeginActivateLicense(QuantumConcepts.Common.QCConnectWS.ActivateLicenseRequest request, System.AsyncCallback callback, object asyncState);
        
        QuantumConcepts.Common.QCConnectWS.ActivateLicenseResponse EndActivateLicense(System.IAsyncResult result);
        
        // CODEGEN: Generating message contract since message ValidateLicenseRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://quantumconceptscorp.com/connect/ValidateLicense", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        QuantumConcepts.Common.QCConnectWS.ValidateLicenseResponse ValidateLicense(QuantumConcepts.Common.QCConnectWS.ValidateLicenseRequest request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://quantumconceptscorp.com/connect/ValidateLicense", ReplyAction="*")]
        System.IAsyncResult BeginValidateLicense(QuantumConcepts.Common.QCConnectWS.ValidateLicenseRequest request, System.AsyncCallback callback, object asyncState);
        
        QuantumConcepts.Common.QCConnectWS.ValidateLicenseResponse EndValidateLicense(System.IAsyncResult result);
        
        // CODEGEN: Generating message contract since message CreateOrUpdateLeaderBoardRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://quantumconceptscorp.com/connect/CreateOrUpdateLeaderBoard", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        QuantumConcepts.Common.QCConnectWS.CreateOrUpdateLeaderBoardResponse CreateOrUpdateLeaderBoard(QuantumConcepts.Common.QCConnectWS.CreateOrUpdateLeaderBoardRequest request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://quantumconceptscorp.com/connect/CreateOrUpdateLeaderBoard", ReplyAction="*")]
        System.IAsyncResult BeginCreateOrUpdateLeaderBoard(QuantumConcepts.Common.QCConnectWS.CreateOrUpdateLeaderBoardRequest request, System.AsyncCallback callback, object asyncState);
        
        QuantumConcepts.Common.QCConnectWS.CreateOrUpdateLeaderBoardResponse EndCreateOrUpdateLeaderBoard(System.IAsyncResult result);
        
        // CODEGEN: Generating message contract since message CreateOrUpdateLeaderBoardEntryRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://quantumconceptscorp.com/connect/CreateOrUpdateLeaderBoardEntry", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        QuantumConcepts.Common.QCConnectWS.CreateOrUpdateLeaderBoardEntryResponse CreateOrUpdateLeaderBoardEntry(QuantumConcepts.Common.QCConnectWS.CreateOrUpdateLeaderBoardEntryRequest request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://quantumconceptscorp.com/connect/CreateOrUpdateLeaderBoardEntry", ReplyAction="*")]
        System.IAsyncResult BeginCreateOrUpdateLeaderBoardEntry(QuantumConcepts.Common.QCConnectWS.CreateOrUpdateLeaderBoardEntryRequest request, System.AsyncCallback callback, object asyncState);
        
        QuantumConcepts.Common.QCConnectWS.CreateOrUpdateLeaderBoardEntryResponse EndCreateOrUpdateLeaderBoardEntry(System.IAsyncResult result);
        
        // CODEGEN: Generating message contract since message GetApplicationByInstallerRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://quantumconceptscorp.com/connect/GetApplicationByInstaller", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        QuantumConcepts.Common.QCConnectWS.GetApplicationByInstallerResponse GetApplicationByInstaller(QuantumConcepts.Common.QCConnectWS.GetApplicationByInstallerRequest request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://quantumconceptscorp.com/connect/GetApplicationByInstaller", ReplyAction="*")]
        System.IAsyncResult BeginGetApplicationByInstaller(QuantumConcepts.Common.QCConnectWS.GetApplicationByInstallerRequest request, System.AsyncCallback callback, object asyncState);
        
        QuantumConcepts.Common.QCConnectWS.GetApplicationByInstallerResponse EndGetApplicationByInstaller(System.IAsyncResult result);
        
        // CODEGEN: Generating message contract since message CreatePurchaseForLatestVersionRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://quantumconceptscorp.com/connect/CreatePurchaseForLatestVersion", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        QuantumConcepts.Common.QCConnectWS.CreatePurchaseForLatestVersionResponse CreatePurchaseForLatestVersion(QuantumConcepts.Common.QCConnectWS.CreatePurchaseForLatestVersionRequest request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://quantumconceptscorp.com/connect/CreatePurchaseForLatestVersion", ReplyAction="*")]
        System.IAsyncResult BeginCreatePurchaseForLatestVersion(QuantumConcepts.Common.QCConnectWS.CreatePurchaseForLatestVersionRequest request, System.AsyncCallback callback, object asyncState);
        
        QuantumConcepts.Common.QCConnectWS.CreatePurchaseForLatestVersionResponse EndCreatePurchaseForLatestVersion(System.IAsyncResult result);
        
        // CODEGEN: Generating message contract since message CreatePurchaseRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://quantumconceptscorp.com/connect/CreatePurchase", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        QuantumConcepts.Common.QCConnectWS.CreatePurchaseResponse CreatePurchase(QuantumConcepts.Common.QCConnectWS.CreatePurchaseRequest request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://quantumconceptscorp.com/connect/CreatePurchase", ReplyAction="*")]
        System.IAsyncResult BeginCreatePurchase(QuantumConcepts.Common.QCConnectWS.CreatePurchaseRequest request, System.AsyncCallback callback, object asyncState);
        
        QuantumConcepts.Common.QCConnectWS.CreatePurchaseResponse EndCreatePurchase(System.IAsyncResult result);
        
        // CODEGEN: Generating message contract since message GetApplicationByKeyRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://quantumconceptscorp.com/connect/GetApplicationByKey", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        QuantumConcepts.Common.QCConnectWS.GetApplicationByKeyResponse GetApplicationByKey(QuantumConcepts.Common.QCConnectWS.GetApplicationByKeyRequest request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://quantumconceptscorp.com/connect/GetApplicationByKey", ReplyAction="*")]
        System.IAsyncResult BeginGetApplicationByKey(QuantumConcepts.Common.QCConnectWS.GetApplicationByKeyRequest request, System.AsyncCallback callback, object asyncState);
        
        QuantumConcepts.Common.QCConnectWS.GetApplicationByKeyResponse EndGetApplicationByKey(System.IAsyncResult result);
        
        // CODEGEN: Generating message contract since message GetApplicationVersionByApplicationIDAndVersionRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://quantumconceptscorp.com/connect/GetApplicationVersionByApplicationIDAndVer" +
            "sion", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        QuantumConcepts.Common.QCConnectWS.GetApplicationVersionByApplicationIDAndVersionResponse GetApplicationVersionByApplicationIDAndVersion(QuantumConcepts.Common.QCConnectWS.GetApplicationVersionByApplicationIDAndVersionRequest request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://quantumconceptscorp.com/connect/GetApplicationVersionByApplicationIDAndVer" +
            "sion", ReplyAction="*")]
        System.IAsyncResult BeginGetApplicationVersionByApplicationIDAndVersion(QuantumConcepts.Common.QCConnectWS.GetApplicationVersionByApplicationIDAndVersionRequest request, System.AsyncCallback callback, object asyncState);
        
        QuantumConcepts.Common.QCConnectWS.GetApplicationVersionByApplicationIDAndVersionResponse EndGetApplicationVersionByApplicationIDAndVersion(System.IAsyncResult result);
        
        // CODEGEN: Generating message contract since message GetLatestApplicationVersionByApplicationIDRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://quantumconceptscorp.com/connect/GetLatestApplicationVersionByApplicationID" +
            "", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        QuantumConcepts.Common.QCConnectWS.GetLatestApplicationVersionByApplicationIDResponse GetLatestApplicationVersionByApplicationID(QuantumConcepts.Common.QCConnectWS.GetLatestApplicationVersionByApplicationIDRequest request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://quantumconceptscorp.com/connect/GetLatestApplicationVersionByApplicationID" +
            "", ReplyAction="*")]
        System.IAsyncResult BeginGetLatestApplicationVersionByApplicationID(QuantumConcepts.Common.QCConnectWS.GetLatestApplicationVersionByApplicationIDRequest request, System.AsyncCallback callback, object asyncState);
        
        QuantumConcepts.Common.QCConnectWS.GetLatestApplicationVersionByApplicationIDResponse EndGetLatestApplicationVersionByApplicationID(System.IAsyncResult result);
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.225")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://quantumconceptscorp.com/connect/")]
    public partial class ErrorReport : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int errorReportIDField;
        
        private int applicationIDField;
        
        private int deviceIDField;
        
        private string codeField;
        
        private string messageField;
        
        private string stackTraceField;
        
        private System.DateTime reportedField;
        
        private Application applicationField;
        
        private Device deviceField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public int ErrorReportID {
            get {
                return this.errorReportIDField;
            }
            set {
                this.errorReportIDField = value;
                this.RaisePropertyChanged("ErrorReportID");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public int ApplicationID {
            get {
                return this.applicationIDField;
            }
            set {
                this.applicationIDField = value;
                this.RaisePropertyChanged("ApplicationID");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public int DeviceID {
            get {
                return this.deviceIDField;
            }
            set {
                this.deviceIDField = value;
                this.RaisePropertyChanged("DeviceID");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public string Code {
            get {
                return this.codeField;
            }
            set {
                this.codeField = value;
                this.RaisePropertyChanged("Code");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public string Message {
            get {
                return this.messageField;
            }
            set {
                this.messageField = value;
                this.RaisePropertyChanged("Message");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        public string StackTrace {
            get {
                return this.stackTraceField;
            }
            set {
                this.stackTraceField = value;
                this.RaisePropertyChanged("StackTrace");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=6)]
        public System.DateTime Reported {
            get {
                return this.reportedField;
            }
            set {
                this.reportedField = value;
                this.RaisePropertyChanged("Reported");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=7)]
        public Application Application {
            get {
                return this.applicationField;
            }
            set {
                this.applicationField = value;
                this.RaisePropertyChanged("Application");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=8)]
        public Device Device {
            get {
                return this.deviceField;
            }
            set {
                this.deviceField = value;
                this.RaisePropertyChanged("Device");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.225")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://quantumconceptscorp.com/connect/")]
    public partial class Application : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int applicationIDField;
        
        private string keyField;
        
        private string nameField;
        
        private string installerFileNameField;
        
        private string installerFileExtensionField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public int ApplicationID {
            get {
                return this.applicationIDField;
            }
            set {
                this.applicationIDField = value;
                this.RaisePropertyChanged("ApplicationID");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string Key {
            get {
                return this.keyField;
            }
            set {
                this.keyField = value;
                this.RaisePropertyChanged("Key");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
                this.RaisePropertyChanged("Name");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public string InstallerFileName {
            get {
                return this.installerFileNameField;
            }
            set {
                this.installerFileNameField = value;
                this.RaisePropertyChanged("InstallerFileName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public string InstallerFileExtension {
            get {
                return this.installerFileExtensionField;
            }
            set {
                this.installerFileExtensionField = value;
                this.RaisePropertyChanged("InstallerFileExtension");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.225")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://quantumconceptscorp.com/connect/")]
    public partial class ApplicationVersionDistribution : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int applicationVersionDistributionIDField;
        
        private int applicationVersionIDField;
        
        private ApplicationVersionDistributionPublisher publisherField;
        
        private string sKUField;
        
        private decimal priceField;
        
        private decimal shareField;
        
        private ApplicationVersion applicationVersionField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public int ApplicationVersionDistributionID {
            get {
                return this.applicationVersionDistributionIDField;
            }
            set {
                this.applicationVersionDistributionIDField = value;
                this.RaisePropertyChanged("ApplicationVersionDistributionID");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public int ApplicationVersionID {
            get {
                return this.applicationVersionIDField;
            }
            set {
                this.applicationVersionIDField = value;
                this.RaisePropertyChanged("ApplicationVersionID");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public ApplicationVersionDistributionPublisher Publisher {
            get {
                return this.publisherField;
            }
            set {
                this.publisherField = value;
                this.RaisePropertyChanged("Publisher");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public string SKU {
            get {
                return this.sKUField;
            }
            set {
                this.sKUField = value;
                this.RaisePropertyChanged("SKU");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public decimal Price {
            get {
                return this.priceField;
            }
            set {
                this.priceField = value;
                this.RaisePropertyChanged("Price");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        public decimal Share {
            get {
                return this.shareField;
            }
            set {
                this.shareField = value;
                this.RaisePropertyChanged("Share");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=6)]
        public ApplicationVersion ApplicationVersion {
            get {
                return this.applicationVersionField;
            }
            set {
                this.applicationVersionField = value;
                this.RaisePropertyChanged("ApplicationVersion");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.225")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://quantumconceptscorp.com/connect/")]
    public enum ApplicationVersionDistributionPublisher {
        
        /// <remarks/>
        Marketplace,
        
        /// <remarks/>
        Mobihand,
        
        /// <remarks/>
        Handango,
        
        /// <remarks/>
        QuantumConcepts,
        
        /// <remarks/>
        QuantumConceptsViaPaypal,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.225")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://quantumconceptscorp.com/connect/")]
    public partial class ApplicationVersion : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int applicationVersionIDField;
        
        private int applicationIDField;
        
        private System.Nullable<int> upgradeFromApplicationVersionIDField;
        
        private int majorField;
        
        private int minorField;
        
        private int buildField;
        
        private int revisionField;
        
        private System.Nullable<System.DateTime> releasedField;
        
        private string releaseNotesField;
        
        private byte[] licenseEncryptionKeyField;
        
        private Application applicationField;
        
        private ApplicationVersion upgradeFromApplicationVersionField;
        
        private Version versionField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public int ApplicationVersionID {
            get {
                return this.applicationVersionIDField;
            }
            set {
                this.applicationVersionIDField = value;
                this.RaisePropertyChanged("ApplicationVersionID");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public int ApplicationID {
            get {
                return this.applicationIDField;
            }
            set {
                this.applicationIDField = value;
                this.RaisePropertyChanged("ApplicationID");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=2)]
        public System.Nullable<int> UpgradeFromApplicationVersionID {
            get {
                return this.upgradeFromApplicationVersionIDField;
            }
            set {
                this.upgradeFromApplicationVersionIDField = value;
                this.RaisePropertyChanged("UpgradeFromApplicationVersionID");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public int Major {
            get {
                return this.majorField;
            }
            set {
                this.majorField = value;
                this.RaisePropertyChanged("Major");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public int Minor {
            get {
                return this.minorField;
            }
            set {
                this.minorField = value;
                this.RaisePropertyChanged("Minor");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        public int Build {
            get {
                return this.buildField;
            }
            set {
                this.buildField = value;
                this.RaisePropertyChanged("Build");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=6)]
        public int Revision {
            get {
                return this.revisionField;
            }
            set {
                this.revisionField = value;
                this.RaisePropertyChanged("Revision");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=7)]
        public System.Nullable<System.DateTime> Released {
            get {
                return this.releasedField;
            }
            set {
                this.releasedField = value;
                this.RaisePropertyChanged("Released");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=8)]
        public string ReleaseNotes {
            get {
                return this.releaseNotesField;
            }
            set {
                this.releaseNotesField = value;
                this.RaisePropertyChanged("ReleaseNotes");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary", Order=9)]
        public byte[] LicenseEncryptionKey {
            get {
                return this.licenseEncryptionKeyField;
            }
            set {
                this.licenseEncryptionKeyField = value;
                this.RaisePropertyChanged("LicenseEncryptionKey");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=10)]
        public Application Application {
            get {
                return this.applicationField;
            }
            set {
                this.applicationField = value;
                this.RaisePropertyChanged("Application");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=11)]
        public ApplicationVersion UpgradeFromApplicationVersion {
            get {
                return this.upgradeFromApplicationVersionField;
            }
            set {
                this.upgradeFromApplicationVersionField = value;
                this.RaisePropertyChanged("UpgradeFromApplicationVersion");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=12)]
        public Version Version {
            get {
                return this.versionField;
            }
            set {
                this.versionField = value;
                this.RaisePropertyChanged("Version");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.225")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://quantumconceptscorp.com/connect/")]
    public partial class Version : object, System.ComponentModel.INotifyPropertyChanged {
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.225")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://quantumconceptscorp.com/connect/")]
    public partial class Purchase : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int purchaseIDField;
        
        private int applicationVersionDistributionIDField;
        
        private string referenceNumberField;
        
        private System.DateTime dateTimeField;
        
        private System.Nullable<decimal> adjustedPriceField;
        
        private System.Nullable<int> userIDField;
        
        private ApplicationVersionDistribution applicationVersionDistributionField;
        
        private User userField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public int PurchaseID {
            get {
                return this.purchaseIDField;
            }
            set {
                this.purchaseIDField = value;
                this.RaisePropertyChanged("PurchaseID");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public int ApplicationVersionDistributionID {
            get {
                return this.applicationVersionDistributionIDField;
            }
            set {
                this.applicationVersionDistributionIDField = value;
                this.RaisePropertyChanged("ApplicationVersionDistributionID");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string ReferenceNumber {
            get {
                return this.referenceNumberField;
            }
            set {
                this.referenceNumberField = value;
                this.RaisePropertyChanged("ReferenceNumber");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public System.DateTime DateTime {
            get {
                return this.dateTimeField;
            }
            set {
                this.dateTimeField = value;
                this.RaisePropertyChanged("DateTime");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=4)]
        public System.Nullable<decimal> AdjustedPrice {
            get {
                return this.adjustedPriceField;
            }
            set {
                this.adjustedPriceField = value;
                this.RaisePropertyChanged("AdjustedPrice");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=5)]
        public System.Nullable<int> UserID {
            get {
                return this.userIDField;
            }
            set {
                this.userIDField = value;
                this.RaisePropertyChanged("UserID");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=6)]
        public ApplicationVersionDistribution ApplicationVersionDistribution {
            get {
                return this.applicationVersionDistributionField;
            }
            set {
                this.applicationVersionDistributionField = value;
                this.RaisePropertyChanged("ApplicationVersionDistribution");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=7)]
        public User User {
            get {
                return this.userField;
            }
            set {
                this.userField = value;
                this.RaisePropertyChanged("User");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.225")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://quantumconceptscorp.com/connect/")]
    public partial class User : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int userIDField;
        
        private string firstNameField;
        
        private string lastNameField;
        
        private string emailAddressField;
        
        private string displayNameField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public int UserID {
            get {
                return this.userIDField;
            }
            set {
                this.userIDField = value;
                this.RaisePropertyChanged("UserID");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string FirstName {
            get {
                return this.firstNameField;
            }
            set {
                this.firstNameField = value;
                this.RaisePropertyChanged("FirstName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string LastName {
            get {
                return this.lastNameField;
            }
            set {
                this.lastNameField = value;
                this.RaisePropertyChanged("LastName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public string EmailAddress {
            get {
                return this.emailAddressField;
            }
            set {
                this.emailAddressField = value;
                this.RaisePropertyChanged("EmailAddress");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public string DisplayName {
            get {
                return this.displayNameField;
            }
            set {
                this.displayNameField = value;
                this.RaisePropertyChanged("DisplayName");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.225")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://quantumconceptscorp.com/connect/")]
    public partial class UserDevice : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int userDeviceIDField;
        
        private int userIDField;
        
        private int deviceIDField;
        
        private User userField;
        
        private Device deviceField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public int UserDeviceID {
            get {
                return this.userDeviceIDField;
            }
            set {
                this.userDeviceIDField = value;
                this.RaisePropertyChanged("UserDeviceID");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public int UserID {
            get {
                return this.userIDField;
            }
            set {
                this.userIDField = value;
                this.RaisePropertyChanged("UserID");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public int DeviceID {
            get {
                return this.deviceIDField;
            }
            set {
                this.deviceIDField = value;
                this.RaisePropertyChanged("DeviceID");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public User User {
            get {
                return this.userField;
            }
            set {
                this.userField = value;
                this.RaisePropertyChanged("User");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public Device Device {
            get {
                return this.deviceField;
            }
            set {
                this.deviceField = value;
                this.RaisePropertyChanged("Device");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.225")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://quantumconceptscorp.com/connect/")]
    public partial class Device : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int deviceIDField;
        
        private string uniqueIDField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public int DeviceID {
            get {
                return this.deviceIDField;
            }
            set {
                this.deviceIDField = value;
                this.RaisePropertyChanged("DeviceID");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string UniqueID {
            get {
                return this.uniqueIDField;
            }
            set {
                this.uniqueIDField = value;
                this.RaisePropertyChanged("UniqueID");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.225")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://quantumconceptscorp.com/connect/")]
    public partial class LeaderBoardEntry : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int leaderBoardEntryIDField;
        
        private int leaderBoardIDField;
        
        private int userDeviceIDField;
        
        private long scoreField;
        
        private LeaderBoard leaderBoardField;
        
        private UserDevice userDeviceField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public int LeaderBoardEntryID {
            get {
                return this.leaderBoardEntryIDField;
            }
            set {
                this.leaderBoardEntryIDField = value;
                this.RaisePropertyChanged("LeaderBoardEntryID");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public int LeaderBoardID {
            get {
                return this.leaderBoardIDField;
            }
            set {
                this.leaderBoardIDField = value;
                this.RaisePropertyChanged("LeaderBoardID");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public int UserDeviceID {
            get {
                return this.userDeviceIDField;
            }
            set {
                this.userDeviceIDField = value;
                this.RaisePropertyChanged("UserDeviceID");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public long Score {
            get {
                return this.scoreField;
            }
            set {
                this.scoreField = value;
                this.RaisePropertyChanged("Score");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public LeaderBoard LeaderBoard {
            get {
                return this.leaderBoardField;
            }
            set {
                this.leaderBoardField = value;
                this.RaisePropertyChanged("LeaderBoard");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        public UserDevice UserDevice {
            get {
                return this.userDeviceField;
            }
            set {
                this.userDeviceField = value;
                this.RaisePropertyChanged("UserDevice");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.225")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://quantumconceptscorp.com/connect/")]
    public partial class LeaderBoard : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int leaderBoardIDField;
        
        private int applicationIDField;
        
        private string keyField;
        
        private string titleField;
        
        private Application applicationField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public int LeaderBoardID {
            get {
                return this.leaderBoardIDField;
            }
            set {
                this.leaderBoardIDField = value;
                this.RaisePropertyChanged("LeaderBoardID");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public int ApplicationID {
            get {
                return this.applicationIDField;
            }
            set {
                this.applicationIDField = value;
                this.RaisePropertyChanged("ApplicationID");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string Key {
            get {
                return this.keyField;
            }
            set {
                this.keyField = value;
                this.RaisePropertyChanged("Key");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public string Title {
            get {
                return this.titleField;
            }
            set {
                this.titleField = value;
                this.RaisePropertyChanged("Title");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public Application Application {
            get {
                return this.applicationField;
            }
            set {
                this.applicationField = value;
                this.RaisePropertyChanged("Application");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.225")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://quantumconceptscorp.com/connect/")]
    public partial class ActivationProperty : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string nameField;
        
        private string valueField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
                this.RaisePropertyChanged("Name");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
                this.RaisePropertyChanged("Value");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.225")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://quantumconceptscorp.com/connect/")]
    public partial class ApplicationRegistration : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int applicationRegistrationIDField;
        
        private int applicationVersionIDField;
        
        private int deviceIDField;
        
        private int userIDField;
        
        private System.DateTime registeredField;
        
        private ApplicationVersion applicationVersionField;
        
        private Device deviceField;
        
        private User userField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public int ApplicationRegistrationID {
            get {
                return this.applicationRegistrationIDField;
            }
            set {
                this.applicationRegistrationIDField = value;
                this.RaisePropertyChanged("ApplicationRegistrationID");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public int ApplicationVersionID {
            get {
                return this.applicationVersionIDField;
            }
            set {
                this.applicationVersionIDField = value;
                this.RaisePropertyChanged("ApplicationVersionID");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public int DeviceID {
            get {
                return this.deviceIDField;
            }
            set {
                this.deviceIDField = value;
                this.RaisePropertyChanged("DeviceID");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public int UserID {
            get {
                return this.userIDField;
            }
            set {
                this.userIDField = value;
                this.RaisePropertyChanged("UserID");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public System.DateTime Registered {
            get {
                return this.registeredField;
            }
            set {
                this.registeredField = value;
                this.RaisePropertyChanged("Registered");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        public ApplicationVersion ApplicationVersion {
            get {
                return this.applicationVersionField;
            }
            set {
                this.applicationVersionField = value;
                this.RaisePropertyChanged("ApplicationVersion");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=6)]
        public Device Device {
            get {
                return this.deviceField;
            }
            set {
                this.deviceField = value;
                this.RaisePropertyChanged("Device");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=7)]
        public User User {
            get {
                return this.userField;
            }
            set {
                this.userField = value;
                this.RaisePropertyChanged("User");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.225")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://quantumconceptscorp.com/connect/")]
    public partial class Authorization : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string keyField;
        
        private string secretField;
        
        private System.Xml.XmlAttribute[] anyAttrField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string Key {
            get {
                return this.keyField;
            }
            set {
                this.keyField = value;
                this.RaisePropertyChanged("Key");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string Secret {
            get {
                return this.secretField;
            }
            set {
                this.secretField = value;
                this.RaisePropertyChanged("Secret");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Xml.XmlAttribute[] AnyAttr {
            get {
                return this.anyAttrField;
            }
            set {
                this.anyAttrField = value;
                this.RaisePropertyChanged("AnyAttr");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.225")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://quantumconceptscorp.com/connect/")]
    public partial class DownloadLog : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int downloadLogIDField;
        
        private int applicationVersionIDField;
        
        private System.Nullable<int> userIDField;
        
        private string referenceNumberField;
        
        private System.DateTime dateTimeField;
        
        private ApplicationVersion applicationVersionField;
        
        private User userField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public int DownloadLogID {
            get {
                return this.downloadLogIDField;
            }
            set {
                this.downloadLogIDField = value;
                this.RaisePropertyChanged("DownloadLogID");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public int ApplicationVersionID {
            get {
                return this.applicationVersionIDField;
            }
            set {
                this.applicationVersionIDField = value;
                this.RaisePropertyChanged("ApplicationVersionID");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=2)]
        public System.Nullable<int> UserID {
            get {
                return this.userIDField;
            }
            set {
                this.userIDField = value;
                this.RaisePropertyChanged("UserID");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public string ReferenceNumber {
            get {
                return this.referenceNumberField;
            }
            set {
                this.referenceNumberField = value;
                this.RaisePropertyChanged("ReferenceNumber");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public System.DateTime DateTime {
            get {
                return this.dateTimeField;
            }
            set {
                this.dateTimeField = value;
                this.RaisePropertyChanged("DateTime");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        public ApplicationVersion ApplicationVersion {
            get {
                return this.applicationVersionField;
            }
            set {
                this.applicationVersionField = value;
                this.RaisePropertyChanged("ApplicationVersion");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=6)]
        public User User {
            get {
                return this.userField;
            }
            set {
                this.userField = value;
                this.RaisePropertyChanged("User");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.225")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://quantumconceptscorp.com/connect/")]
    public partial class Feedback : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int feedbackIDField;
        
        private int applicationIDField;
        
        private int deviceIDField;
        
        private string emailAddressField;
        
        private string subjectField;
        
        private string messageField;
        
        private System.DateTime reportedField;
        
        private Application applicationField;
        
        private Device deviceField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public int FeedbackID {
            get {
                return this.feedbackIDField;
            }
            set {
                this.feedbackIDField = value;
                this.RaisePropertyChanged("FeedbackID");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public int ApplicationID {
            get {
                return this.applicationIDField;
            }
            set {
                this.applicationIDField = value;
                this.RaisePropertyChanged("ApplicationID");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public int DeviceID {
            get {
                return this.deviceIDField;
            }
            set {
                this.deviceIDField = value;
                this.RaisePropertyChanged("DeviceID");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public string EmailAddress {
            get {
                return this.emailAddressField;
            }
            set {
                this.emailAddressField = value;
                this.RaisePropertyChanged("EmailAddress");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public string Subject {
            get {
                return this.subjectField;
            }
            set {
                this.subjectField = value;
                this.RaisePropertyChanged("Subject");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        public string Message {
            get {
                return this.messageField;
            }
            set {
                this.messageField = value;
                this.RaisePropertyChanged("Message");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=6)]
        public System.DateTime Reported {
            get {
                return this.reportedField;
            }
            set {
                this.reportedField = value;
                this.RaisePropertyChanged("Reported");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=7)]
        public Application Application {
            get {
                return this.applicationField;
            }
            set {
                this.applicationField = value;
                this.RaisePropertyChanged("Application");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=8)]
        public Device Device {
            get {
                return this.deviceField;
            }
            set {
                this.deviceField = value;
                this.RaisePropertyChanged("Device");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CreateDownloadLog", WrapperNamespace="http://quantumconceptscorp.com/connect/", IsWrapped=true)]
    public partial class CreateDownloadLogRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://quantumconceptscorp.com/connect/")]
        public QuantumConcepts.Common.QCConnectWS.Authorization Authorization;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://quantumconceptscorp.com/connect/", Order=0)]
        public int applicationVersionID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://quantumconceptscorp.com/connect/", Order=1)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> userID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://quantumconceptscorp.com/connect/", Order=2)]
        public string referenceNumber;
        
        public CreateDownloadLogRequest() {
        }
        
        public CreateDownloadLogRequest(QuantumConcepts.Common.QCConnectWS.Authorization Authorization, int applicationVersionID, System.Nullable<int> userID, string referenceNumber) {
            this.Authorization = Authorization;
            this.applicationVersionID = applicationVersionID;
            this.userID = userID;
            this.referenceNumber = referenceNumber;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CreateDownloadLogResponse", WrapperNamespace="http://quantumconceptscorp.com/connect/", IsWrapped=true)]
    public partial class CreateDownloadLogResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://quantumconceptscorp.com/connect/", Order=0)]
        public QuantumConcepts.Common.QCConnectWS.DownloadLog CreateDownloadLogResult;
        
        public CreateDownloadLogResponse() {
        }
        
        public CreateDownloadLogResponse(QuantumConcepts.Common.QCConnectWS.DownloadLog CreateDownloadLogResult) {
            this.CreateDownloadLogResult = CreateDownloadLogResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CheckForUpgrade", WrapperNamespace="http://quantumconceptscorp.com/connect/", IsWrapped=true)]
    public partial class CheckForUpgradeRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://quantumconceptscorp.com/connect/")]
        public QuantumConcepts.Common.QCConnectWS.Authorization Authorization;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://quantumconceptscorp.com/connect/", Order=0)]
        public string applicationKey;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://quantumconceptscorp.com/connect/", Order=1)]
        public int major;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://quantumconceptscorp.com/connect/", Order=2)]
        public int minor;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://quantumconceptscorp.com/connect/", Order=3)]
        public int build;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://quantumconceptscorp.com/connect/", Order=4)]
        public int revision;
        
        public CheckForUpgradeRequest() {
        }
        
        public CheckForUpgradeRequest(QuantumConcepts.Common.QCConnectWS.Authorization Authorization, string applicationKey, int major, int minor, int build, int revision) {
            this.Authorization = Authorization;
            this.applicationKey = applicationKey;
            this.major = major;
            this.minor = minor;
            this.build = build;
            this.revision = revision;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CheckForUpgradeResponse", WrapperNamespace="http://quantumconceptscorp.com/connect/", IsWrapped=true)]
    public partial class CheckForUpgradeResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://quantumconceptscorp.com/connect/", Order=0)]
        public QuantumConcepts.Common.QCConnectWS.ApplicationVersion CheckForUpgradeResult;
        
        public CheckForUpgradeResponse() {
        }
        
        public CheckForUpgradeResponse(QuantumConcepts.Common.QCConnectWS.ApplicationVersion CheckForUpgradeResult) {
            this.CheckForUpgradeResult = CheckForUpgradeResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CreateLicenseForPurchase", WrapperNamespace="http://quantumconceptscorp.com/connect/", IsWrapped=true)]
    public partial class CreateLicenseForPurchaseRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://quantumconceptscorp.com/connect/")]
        public QuantumConcepts.Common.QCConnectWS.Authorization Authorization;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://quantumconceptscorp.com/connect/", Order=0)]
        public string applicationKey;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://quantumconceptscorp.com/connect/", Order=1)]
        public int major;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://quantumconceptscorp.com/connect/", Order=2)]
        public int minor;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://quantumconceptscorp.com/connect/", Order=3)]
        public int build;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://quantumconceptscorp.com/connect/", Order=4)]
        public int revision;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://quantumconceptscorp.com/connect/", Order=5)]
        public QuantumConcepts.Common.QCConnectWS.ApplicationVersionDistributionPublisher publisher;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://quantumconceptscorp.com/connect/", Order=6)]
        public string referenceNumber;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://quantumconceptscorp.com/connect/", Order=7)]
        public string firstName;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://quantumconceptscorp.com/connect/", Order=8)]
        public string lastName;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://quantumconceptscorp.com/connect/", Order=9)]
        public string emailAddress;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://quantumconceptscorp.com/connect/", Order=10)]
        public bool isTrial;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://quantumconceptscorp.com/connect/", Order=11)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> expirationDate;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://quantumconceptscorp.com/connect/", Order=12)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<decimal> adjustedPrice;
        
        public CreateLicenseForPurchaseRequest() {
        }
        
        public CreateLicenseForPurchaseRequest(QuantumConcepts.Common.QCConnectWS.Authorization Authorization, string applicationKey, int major, int minor, int build, int revision, QuantumConcepts.Common.QCConnectWS.ApplicationVersionDistributionPublisher publisher, string referenceNumber, string firstName, string lastName, string emailAddress, bool isTrial, System.Nullable<System.DateTime> expirationDate, System.Nullable<decimal> adjustedPrice) {
            this.Authorization = Authorization;
            this.applicationKey = applicationKey;
            this.major = major;
            this.minor = minor;
            this.build = build;
            this.revision = revision;
            this.publisher = publisher;
            this.referenceNumber = referenceNumber;
            this.firstName = firstName;
            this.lastName = lastName;
            this.emailAddress = emailAddress;
            this.isTrial = isTrial;
            this.expirationDate = expirationDate;
            this.adjustedPrice = adjustedPrice;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CreateLicenseForPurchaseResponse", WrapperNamespace="http://quantumconceptscorp.com/connect/", IsWrapped=true)]
    public partial class CreateLicenseForPurchaseResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://quantumconceptscorp.com/connect/", Order=0)]
        public int CreateLicenseForPurchaseResult;
        
        public CreateLicenseForPurchaseResponse() {
        }
        
        public CreateLicenseForPurchaseResponse(int CreateLicenseForPurchaseResult) {
            this.CreateLicenseForPurchaseResult = CreateLicenseForPurchaseResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="EmailLicense", WrapperNamespace="http://quantumconceptscorp.com/connect/", IsWrapped=true)]
    public partial class EmailLicenseRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://quantumconceptscorp.com/connect/")]
        public QuantumConcepts.Common.QCConnectWS.Authorization Authorization;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://quantumconceptscorp.com/connect/", Order=0)]
        public int licenseID;
        
        public EmailLicenseRequest() {
        }
        
        public EmailLicenseRequest(QuantumConcepts.Common.QCConnectWS.Authorization Authorization, int licenseID) {
            this.Authorization = Authorization;
            this.licenseID = licenseID;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="EmailLicenseResponse", WrapperNamespace="http://quantumconceptscorp.com/connect/", IsWrapped=true)]
    public partial class EmailLicenseResponse {
        
        public EmailLicenseResponse() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ActivateLicense", WrapperNamespace="http://quantumconceptscorp.com/connect/", IsWrapped=true)]
    public partial class ActivateLicenseRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://quantumconceptscorp.com/connect/")]
        public QuantumConcepts.Common.QCConnectWS.Authorization Authorization;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://quantumconceptscorp.com/connect/", Order=0)]
        public string applicationKey;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://quantumconceptscorp.com/connect/", Order=1)]
        public int major;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://quantumconceptscorp.com/connect/", Order=2)]
        public int minor;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://quantumconceptscorp.com/connect/", Order=3)]
        public int build;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://quantumconceptscorp.com/connect/", Order=4)]
        public int revision;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://quantumconceptscorp.com/connect/", Order=5)]
        public string emailAddress;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://quantumconceptscorp.com/connect/", Order=6)]
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] licenseFile;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://quantumconceptscorp.com/connect/", Order=7)]
        public ActivationProperty[] activationProperties;
        
        public ActivateLicenseRequest() {
        }
        
        public ActivateLicenseRequest(QuantumConcepts.Common.QCConnectWS.Authorization Authorization, string applicationKey, int major, int minor, int build, int revision, string emailAddress, byte[] licenseFile, ActivationProperty[] activationProperties) {
            this.Authorization = Authorization;
            this.applicationKey = applicationKey;
            this.major = major;
            this.minor = minor;
            this.build = build;
            this.revision = revision;
            this.emailAddress = emailAddress;
            this.licenseFile = licenseFile;
            this.activationProperties = activationProperties;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ActivateLicenseResponse", WrapperNamespace="http://quantumconceptscorp.com/connect/", IsWrapped=true)]
    public partial class ActivateLicenseResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://quantumconceptscorp.com/connect/", Order=0)]
        public bool ActivateLicenseResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://quantumconceptscorp.com/connect/", Order=1)]
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] activationFile;
        
        public ActivateLicenseResponse() {
        }
        
        public ActivateLicenseResponse(bool ActivateLicenseResult, byte[] activationFile) {
            this.ActivateLicenseResult = ActivateLicenseResult;
            this.activationFile = activationFile;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ValidateLicense", WrapperNamespace="http://quantumconceptscorp.com/connect/", IsWrapped=true)]
    public partial class ValidateLicenseRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://quantumconceptscorp.com/connect/")]
        public QuantumConcepts.Common.QCConnectWS.Authorization Authorization;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://quantumconceptscorp.com/connect/", Order=0)]
        public string applicationKey;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://quantumconceptscorp.com/connect/", Order=1)]
        public int major;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://quantumconceptscorp.com/connect/", Order=2)]
        public int minor;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://quantumconceptscorp.com/connect/", Order=3)]
        public int build;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://quantumconceptscorp.com/connect/", Order=4)]
        public int revision;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://quantumconceptscorp.com/connect/", Order=5)]
        public string emailAddress;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://quantumconceptscorp.com/connect/", Order=6)]
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] licenseFile;
        
        public ValidateLicenseRequest() {
        }
        
        public ValidateLicenseRequest(QuantumConcepts.Common.QCConnectWS.Authorization Authorization, string applicationKey, int major, int minor, int build, int revision, string emailAddress, byte[] licenseFile) {
            this.Authorization = Authorization;
            this.applicationKey = applicationKey;
            this.major = major;
            this.minor = minor;
            this.build = build;
            this.revision = revision;
            this.emailAddress = emailAddress;
            this.licenseFile = licenseFile;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ValidateLicenseResponse", WrapperNamespace="http://quantumconceptscorp.com/connect/", IsWrapped=true)]
    public partial class ValidateLicenseResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://quantumconceptscorp.com/connect/", Order=0)]
        public bool ValidateLicenseResult;
        
        public ValidateLicenseResponse() {
        }
        
        public ValidateLicenseResponse(bool ValidateLicenseResult) {
            this.ValidateLicenseResult = ValidateLicenseResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CreateOrUpdateLeaderBoard", WrapperNamespace="http://quantumconceptscorp.com/connect/", IsWrapped=true)]
    public partial class CreateOrUpdateLeaderBoardRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://quantumconceptscorp.com/connect/")]
        public QuantumConcepts.Common.QCConnectWS.Authorization Authorization;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://quantumconceptscorp.com/connect/", Order=0)]
        public string applicationKey;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://quantumconceptscorp.com/connect/", Order=1)]
        public string key;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://quantumconceptscorp.com/connect/", Order=2)]
        public string title;
        
        public CreateOrUpdateLeaderBoardRequest() {
        }
        
        public CreateOrUpdateLeaderBoardRequest(QuantumConcepts.Common.QCConnectWS.Authorization Authorization, string applicationKey, string key, string title) {
            this.Authorization = Authorization;
            this.applicationKey = applicationKey;
            this.key = key;
            this.title = title;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CreateOrUpdateLeaderBoardResponse", WrapperNamespace="http://quantumconceptscorp.com/connect/", IsWrapped=true)]
    public partial class CreateOrUpdateLeaderBoardResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://quantumconceptscorp.com/connect/", Order=0)]
        public QuantumConcepts.Common.QCConnectWS.LeaderBoard CreateOrUpdateLeaderBoardResult;
        
        public CreateOrUpdateLeaderBoardResponse() {
        }
        
        public CreateOrUpdateLeaderBoardResponse(QuantumConcepts.Common.QCConnectWS.LeaderBoard CreateOrUpdateLeaderBoardResult) {
            this.CreateOrUpdateLeaderBoardResult = CreateOrUpdateLeaderBoardResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CreateOrUpdateLeaderBoardEntry", WrapperNamespace="http://quantumconceptscorp.com/connect/", IsWrapped=true)]
    public partial class CreateOrUpdateLeaderBoardEntryRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://quantumconceptscorp.com/connect/")]
        public QuantumConcepts.Common.QCConnectWS.Authorization Authorization;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://quantumconceptscorp.com/connect/", Order=0)]
        public string applicationKey;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://quantumconceptscorp.com/connect/", Order=1)]
        public string key;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://quantumconceptscorp.com/connect/", Order=2)]
        public string deviceUniqueID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://quantumconceptscorp.com/connect/", Order=3)]
        public int userID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://quantumconceptscorp.com/connect/", Order=4)]
        public long score;
        
        public CreateOrUpdateLeaderBoardEntryRequest() {
        }
        
        public CreateOrUpdateLeaderBoardEntryRequest(QuantumConcepts.Common.QCConnectWS.Authorization Authorization, string applicationKey, string key, string deviceUniqueID, int userID, long score) {
            this.Authorization = Authorization;
            this.applicationKey = applicationKey;
            this.key = key;
            this.deviceUniqueID = deviceUniqueID;
            this.userID = userID;
            this.score = score;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CreateOrUpdateLeaderBoardEntryResponse", WrapperNamespace="http://quantumconceptscorp.com/connect/", IsWrapped=true)]
    public partial class CreateOrUpdateLeaderBoardEntryResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://quantumconceptscorp.com/connect/", Order=0)]
        public QuantumConcepts.Common.QCConnectWS.LeaderBoardEntry CreateOrUpdateLeaderBoardEntryResult;
        
        public CreateOrUpdateLeaderBoardEntryResponse() {
        }
        
        public CreateOrUpdateLeaderBoardEntryResponse(QuantumConcepts.Common.QCConnectWS.LeaderBoardEntry CreateOrUpdateLeaderBoardEntryResult) {
            this.CreateOrUpdateLeaderBoardEntryResult = CreateOrUpdateLeaderBoardEntryResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetApplicationByInstaller", WrapperNamespace="http://quantumconceptscorp.com/connect/", IsWrapped=true)]
    public partial class GetApplicationByInstallerRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://quantumconceptscorp.com/connect/")]
        public QuantumConcepts.Common.QCConnectWS.Authorization Authorization;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://quantumconceptscorp.com/connect/", Order=0)]
        public string installerFileName;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://quantumconceptscorp.com/connect/", Order=1)]
        public string installerFileExtension;
        
        public GetApplicationByInstallerRequest() {
        }
        
        public GetApplicationByInstallerRequest(QuantumConcepts.Common.QCConnectWS.Authorization Authorization, string installerFileName, string installerFileExtension) {
            this.Authorization = Authorization;
            this.installerFileName = installerFileName;
            this.installerFileExtension = installerFileExtension;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetApplicationByInstallerResponse", WrapperNamespace="http://quantumconceptscorp.com/connect/", IsWrapped=true)]
    public partial class GetApplicationByInstallerResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://quantumconceptscorp.com/connect/", Order=0)]
        public QuantumConcepts.Common.QCConnectWS.Application GetApplicationByInstallerResult;
        
        public GetApplicationByInstallerResponse() {
        }
        
        public GetApplicationByInstallerResponse(QuantumConcepts.Common.QCConnectWS.Application GetApplicationByInstallerResult) {
            this.GetApplicationByInstallerResult = GetApplicationByInstallerResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CreatePurchaseForLatestVersion", WrapperNamespace="http://quantumconceptscorp.com/connect/", IsWrapped=true)]
    public partial class CreatePurchaseForLatestVersionRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://quantumconceptscorp.com/connect/")]
        public QuantumConcepts.Common.QCConnectWS.Authorization Authorization;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://quantumconceptscorp.com/connect/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> userID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://quantumconceptscorp.com/connect/", Order=1)]
        public string applicationKey;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://quantumconceptscorp.com/connect/", Order=2)]
        public QuantumConcepts.Common.QCConnectWS.ApplicationVersionDistributionPublisher publisher;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://quantumconceptscorp.com/connect/", Order=3)]
        public string referenceNumber;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://quantumconceptscorp.com/connect/", Order=4)]
        public decimal adjustedPrice;
        
        public CreatePurchaseForLatestVersionRequest() {
        }
        
        public CreatePurchaseForLatestVersionRequest(QuantumConcepts.Common.QCConnectWS.Authorization Authorization, System.Nullable<int> userID, string applicationKey, QuantumConcepts.Common.QCConnectWS.ApplicationVersionDistributionPublisher publisher, string referenceNumber, decimal adjustedPrice) {
            this.Authorization = Authorization;
            this.userID = userID;
            this.applicationKey = applicationKey;
            this.publisher = publisher;
            this.referenceNumber = referenceNumber;
            this.adjustedPrice = adjustedPrice;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CreatePurchaseForLatestVersionResponse", WrapperNamespace="http://quantumconceptscorp.com/connect/", IsWrapped=true)]
    public partial class CreatePurchaseForLatestVersionResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://quantumconceptscorp.com/connect/", Order=0)]
        public QuantumConcepts.Common.QCConnectWS.Purchase CreatePurchaseForLatestVersionResult;
        
        public CreatePurchaseForLatestVersionResponse() {
        }
        
        public CreatePurchaseForLatestVersionResponse(QuantumConcepts.Common.QCConnectWS.Purchase CreatePurchaseForLatestVersionResult) {
            this.CreatePurchaseForLatestVersionResult = CreatePurchaseForLatestVersionResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CreatePurchase", WrapperNamespace="http://quantumconceptscorp.com/connect/", IsWrapped=true)]
    public partial class CreatePurchaseRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://quantumconceptscorp.com/connect/")]
        public QuantumConcepts.Common.QCConnectWS.Authorization Authorization;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://quantumconceptscorp.com/connect/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> userID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://quantumconceptscorp.com/connect/", Order=1)]
        public string applicationKey;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://quantumconceptscorp.com/connect/", Order=2)]
        public int major;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://quantumconceptscorp.com/connect/", Order=3)]
        public int minor;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://quantumconceptscorp.com/connect/", Order=4)]
        public int build;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://quantumconceptscorp.com/connect/", Order=5)]
        public int revision;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://quantumconceptscorp.com/connect/", Order=6)]
        public QuantumConcepts.Common.QCConnectWS.ApplicationVersionDistributionPublisher publisher;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://quantumconceptscorp.com/connect/", Order=7)]
        public string referenceNumber;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://quantumconceptscorp.com/connect/", Order=8)]
        public decimal adjustedPrice;
        
        public CreatePurchaseRequest() {
        }
        
        public CreatePurchaseRequest(QuantumConcepts.Common.QCConnectWS.Authorization Authorization, System.Nullable<int> userID, string applicationKey, int major, int minor, int build, int revision, QuantumConcepts.Common.QCConnectWS.ApplicationVersionDistributionPublisher publisher, string referenceNumber, decimal adjustedPrice) {
            this.Authorization = Authorization;
            this.userID = userID;
            this.applicationKey = applicationKey;
            this.major = major;
            this.minor = minor;
            this.build = build;
            this.revision = revision;
            this.publisher = publisher;
            this.referenceNumber = referenceNumber;
            this.adjustedPrice = adjustedPrice;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CreatePurchaseResponse", WrapperNamespace="http://quantumconceptscorp.com/connect/", IsWrapped=true)]
    public partial class CreatePurchaseResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://quantumconceptscorp.com/connect/", Order=0)]
        public QuantumConcepts.Common.QCConnectWS.Purchase CreatePurchaseResult;
        
        public CreatePurchaseResponse() {
        }
        
        public CreatePurchaseResponse(QuantumConcepts.Common.QCConnectWS.Purchase CreatePurchaseResult) {
            this.CreatePurchaseResult = CreatePurchaseResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetApplicationByKey", WrapperNamespace="http://quantumconceptscorp.com/connect/", IsWrapped=true)]
    public partial class GetApplicationByKeyRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://quantumconceptscorp.com/connect/")]
        public QuantumConcepts.Common.QCConnectWS.Authorization Authorization;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://quantumconceptscorp.com/connect/", Order=0)]
        public string key;
        
        public GetApplicationByKeyRequest() {
        }
        
        public GetApplicationByKeyRequest(QuantumConcepts.Common.QCConnectWS.Authorization Authorization, string key) {
            this.Authorization = Authorization;
            this.key = key;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetApplicationByKeyResponse", WrapperNamespace="http://quantumconceptscorp.com/connect/", IsWrapped=true)]
    public partial class GetApplicationByKeyResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://quantumconceptscorp.com/connect/", Order=0)]
        public QuantumConcepts.Common.QCConnectWS.Application GetApplicationByKeyResult;
        
        public GetApplicationByKeyResponse() {
        }
        
        public GetApplicationByKeyResponse(QuantumConcepts.Common.QCConnectWS.Application GetApplicationByKeyResult) {
            this.GetApplicationByKeyResult = GetApplicationByKeyResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetApplicationVersionByApplicationIDAndVersion", WrapperNamespace="http://quantumconceptscorp.com/connect/", IsWrapped=true)]
    public partial class GetApplicationVersionByApplicationIDAndVersionRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://quantumconceptscorp.com/connect/")]
        public QuantumConcepts.Common.QCConnectWS.Authorization Authorization;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://quantumconceptscorp.com/connect/", Order=0)]
        public int applicationID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://quantumconceptscorp.com/connect/", Order=1)]
        public int major;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://quantumconceptscorp.com/connect/", Order=2)]
        public int minor;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://quantumconceptscorp.com/connect/", Order=3)]
        public int build;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://quantumconceptscorp.com/connect/", Order=4)]
        public int revision;
        
        public GetApplicationVersionByApplicationIDAndVersionRequest() {
        }
        
        public GetApplicationVersionByApplicationIDAndVersionRequest(QuantumConcepts.Common.QCConnectWS.Authorization Authorization, int applicationID, int major, int minor, int build, int revision) {
            this.Authorization = Authorization;
            this.applicationID = applicationID;
            this.major = major;
            this.minor = minor;
            this.build = build;
            this.revision = revision;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetApplicationVersionByApplicationIDAndVersionResponse", WrapperNamespace="http://quantumconceptscorp.com/connect/", IsWrapped=true)]
    public partial class GetApplicationVersionByApplicationIDAndVersionResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://quantumconceptscorp.com/connect/", Order=0)]
        public QuantumConcepts.Common.QCConnectWS.ApplicationVersion GetApplicationVersionByApplicationIDAndVersionResult;
        
        public GetApplicationVersionByApplicationIDAndVersionResponse() {
        }
        
        public GetApplicationVersionByApplicationIDAndVersionResponse(QuantumConcepts.Common.QCConnectWS.ApplicationVersion GetApplicationVersionByApplicationIDAndVersionResult) {
            this.GetApplicationVersionByApplicationIDAndVersionResult = GetApplicationVersionByApplicationIDAndVersionResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetLatestApplicationVersionByApplicationID", WrapperNamespace="http://quantumconceptscorp.com/connect/", IsWrapped=true)]
    public partial class GetLatestApplicationVersionByApplicationIDRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://quantumconceptscorp.com/connect/")]
        public QuantumConcepts.Common.QCConnectWS.Authorization Authorization;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://quantumconceptscorp.com/connect/", Order=0)]
        public int applicationID;
        
        public GetLatestApplicationVersionByApplicationIDRequest() {
        }
        
        public GetLatestApplicationVersionByApplicationIDRequest(QuantumConcepts.Common.QCConnectWS.Authorization Authorization, int applicationID) {
            this.Authorization = Authorization;
            this.applicationID = applicationID;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetLatestApplicationVersionByApplicationIDResponse", WrapperNamespace="http://quantumconceptscorp.com/connect/", IsWrapped=true)]
    public partial class GetLatestApplicationVersionByApplicationIDResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://quantumconceptscorp.com/connect/", Order=0)]
        public QuantumConcepts.Common.QCConnectWS.ApplicationVersion GetLatestApplicationVersionByApplicationIDResult;
        
        public GetLatestApplicationVersionByApplicationIDResponse() {
        }
        
        public GetLatestApplicationVersionByApplicationIDResponse(QuantumConcepts.Common.QCConnectWS.ApplicationVersion GetLatestApplicationVersionByApplicationIDResult) {
            this.GetLatestApplicationVersionByApplicationIDResult = GetLatestApplicationVersionByApplicationIDResult;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ServiceSoapChannel : QuantumConcepts.Common.QCConnectWS.ServiceSoap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CreateErrorReportCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public CreateErrorReportCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public QuantumConcepts.Common.QCConnectWS.ErrorReport Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((QuantumConcepts.Common.QCConnectWS.ErrorReport)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CreateFeedbackCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public CreateFeedbackCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public QuantumConcepts.Common.QCConnectWS.Feedback Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((QuantumConcepts.Common.QCConnectWS.Feedback)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CreateDownloadLogCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public CreateDownloadLogCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public QuantumConcepts.Common.QCConnectWS.DownloadLog Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((QuantumConcepts.Common.QCConnectWS.DownloadLog)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class RegisterApplicationForDeviceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public RegisterApplicationForDeviceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public QuantumConcepts.Common.QCConnectWS.ApplicationRegistration Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((QuantumConcepts.Common.QCConnectWS.ApplicationRegistration)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class RegisterApplicationForDevice2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public RegisterApplicationForDevice2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public QuantumConcepts.Common.QCConnectWS.ApplicationRegistration Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((QuantumConcepts.Common.QCConnectWS.ApplicationRegistration)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CheckForUpgradeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public CheckForUpgradeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public QuantumConcepts.Common.QCConnectWS.ApplicationVersion Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((QuantumConcepts.Common.QCConnectWS.ApplicationVersion)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CreateLicenseForPurchaseCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public CreateLicenseForPurchaseCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public int Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ActivateLicenseCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ActivateLicenseCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public byte[] activationFile {
            get {
                base.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[1]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ValidateLicenseCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ValidateLicenseCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CreateOrUpdateLeaderBoardCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public CreateOrUpdateLeaderBoardCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public QuantumConcepts.Common.QCConnectWS.LeaderBoard Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((QuantumConcepts.Common.QCConnectWS.LeaderBoard)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CreateOrUpdateLeaderBoardEntryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public CreateOrUpdateLeaderBoardEntryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public QuantumConcepts.Common.QCConnectWS.LeaderBoardEntry Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((QuantumConcepts.Common.QCConnectWS.LeaderBoardEntry)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetApplicationByInstallerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetApplicationByInstallerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public QuantumConcepts.Common.QCConnectWS.Application Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((QuantumConcepts.Common.QCConnectWS.Application)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CreatePurchaseForLatestVersionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public CreatePurchaseForLatestVersionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public QuantumConcepts.Common.QCConnectWS.Purchase Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((QuantumConcepts.Common.QCConnectWS.Purchase)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CreatePurchaseCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public CreatePurchaseCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public QuantumConcepts.Common.QCConnectWS.Purchase Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((QuantumConcepts.Common.QCConnectWS.Purchase)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetApplicationByKeyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetApplicationByKeyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public QuantumConcepts.Common.QCConnectWS.Application Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((QuantumConcepts.Common.QCConnectWS.Application)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetApplicationVersionByApplicationIDAndVersionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetApplicationVersionByApplicationIDAndVersionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public QuantumConcepts.Common.QCConnectWS.ApplicationVersion Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((QuantumConcepts.Common.QCConnectWS.ApplicationVersion)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetLatestApplicationVersionByApplicationIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetLatestApplicationVersionByApplicationIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public QuantumConcepts.Common.QCConnectWS.ApplicationVersion Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((QuantumConcepts.Common.QCConnectWS.ApplicationVersion)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ServiceSoapClient : System.ServiceModel.ClientBase<QuantumConcepts.Common.QCConnectWS.ServiceSoap>, QuantumConcepts.Common.QCConnectWS.ServiceSoap {
        
        private BeginOperationDelegate onBeginCreateErrorReportDelegate;
        
        private EndOperationDelegate onEndCreateErrorReportDelegate;
        
        private System.Threading.SendOrPostCallback onCreateErrorReportCompletedDelegate;
        
        private BeginOperationDelegate onBeginCreateFeedbackDelegate;
        
        private EndOperationDelegate onEndCreateFeedbackDelegate;
        
        private System.Threading.SendOrPostCallback onCreateFeedbackCompletedDelegate;
        
        private BeginOperationDelegate onBeginCreateDownloadLogDelegate;
        
        private EndOperationDelegate onEndCreateDownloadLogDelegate;
        
        private System.Threading.SendOrPostCallback onCreateDownloadLogCompletedDelegate;
        
        private BeginOperationDelegate onBeginRegisterApplicationForDeviceDelegate;
        
        private EndOperationDelegate onEndRegisterApplicationForDeviceDelegate;
        
        private System.Threading.SendOrPostCallback onRegisterApplicationForDeviceCompletedDelegate;
        
        private BeginOperationDelegate onBeginRegisterApplicationForDevice2Delegate;
        
        private EndOperationDelegate onEndRegisterApplicationForDevice2Delegate;
        
        private System.Threading.SendOrPostCallback onRegisterApplicationForDevice2CompletedDelegate;
        
        private BeginOperationDelegate onBeginCheckForUpgradeDelegate;
        
        private EndOperationDelegate onEndCheckForUpgradeDelegate;
        
        private System.Threading.SendOrPostCallback onCheckForUpgradeCompletedDelegate;
        
        private BeginOperationDelegate onBeginCreateLicenseForPurchaseDelegate;
        
        private EndOperationDelegate onEndCreateLicenseForPurchaseDelegate;
        
        private System.Threading.SendOrPostCallback onCreateLicenseForPurchaseCompletedDelegate;
        
        private BeginOperationDelegate onBeginEmailLicenseDelegate;
        
        private EndOperationDelegate onEndEmailLicenseDelegate;
        
        private System.Threading.SendOrPostCallback onEmailLicenseCompletedDelegate;
        
        private BeginOperationDelegate onBeginActivateLicenseDelegate;
        
        private EndOperationDelegate onEndActivateLicenseDelegate;
        
        private System.Threading.SendOrPostCallback onActivateLicenseCompletedDelegate;
        
        private BeginOperationDelegate onBeginValidateLicenseDelegate;
        
        private EndOperationDelegate onEndValidateLicenseDelegate;
        
        private System.Threading.SendOrPostCallback onValidateLicenseCompletedDelegate;
        
        private BeginOperationDelegate onBeginCreateOrUpdateLeaderBoardDelegate;
        
        private EndOperationDelegate onEndCreateOrUpdateLeaderBoardDelegate;
        
        private System.Threading.SendOrPostCallback onCreateOrUpdateLeaderBoardCompletedDelegate;
        
        private BeginOperationDelegate onBeginCreateOrUpdateLeaderBoardEntryDelegate;
        
        private EndOperationDelegate onEndCreateOrUpdateLeaderBoardEntryDelegate;
        
        private System.Threading.SendOrPostCallback onCreateOrUpdateLeaderBoardEntryCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetApplicationByInstallerDelegate;
        
        private EndOperationDelegate onEndGetApplicationByInstallerDelegate;
        
        private System.Threading.SendOrPostCallback onGetApplicationByInstallerCompletedDelegate;
        
        private BeginOperationDelegate onBeginCreatePurchaseForLatestVersionDelegate;
        
        private EndOperationDelegate onEndCreatePurchaseForLatestVersionDelegate;
        
        private System.Threading.SendOrPostCallback onCreatePurchaseForLatestVersionCompletedDelegate;
        
        private BeginOperationDelegate onBeginCreatePurchaseDelegate;
        
        private EndOperationDelegate onEndCreatePurchaseDelegate;
        
        private System.Threading.SendOrPostCallback onCreatePurchaseCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetApplicationByKeyDelegate;
        
        private EndOperationDelegate onEndGetApplicationByKeyDelegate;
        
        private System.Threading.SendOrPostCallback onGetApplicationByKeyCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetApplicationVersionByApplicationIDAndVersionDelegate;
        
        private EndOperationDelegate onEndGetApplicationVersionByApplicationIDAndVersionDelegate;
        
        private System.Threading.SendOrPostCallback onGetApplicationVersionByApplicationIDAndVersionCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetLatestApplicationVersionByApplicationIDDelegate;
        
        private EndOperationDelegate onEndGetLatestApplicationVersionByApplicationIDDelegate;
        
        private System.Threading.SendOrPostCallback onGetLatestApplicationVersionByApplicationIDCompletedDelegate;
        
        public ServiceSoapClient() {
        }
        
        public ServiceSoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ServiceSoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceSoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public event System.EventHandler<CreateErrorReportCompletedEventArgs> CreateErrorReportCompleted;
        
        public event System.EventHandler<CreateFeedbackCompletedEventArgs> CreateFeedbackCompleted;
        
        public event System.EventHandler<CreateDownloadLogCompletedEventArgs> CreateDownloadLogCompleted;
        
        public event System.EventHandler<RegisterApplicationForDeviceCompletedEventArgs> RegisterApplicationForDeviceCompleted;
        
        public event System.EventHandler<RegisterApplicationForDevice2CompletedEventArgs> RegisterApplicationForDevice2Completed;
        
        public event System.EventHandler<CheckForUpgradeCompletedEventArgs> CheckForUpgradeCompleted;
        
        public event System.EventHandler<CreateLicenseForPurchaseCompletedEventArgs> CreateLicenseForPurchaseCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> EmailLicenseCompleted;
        
        public event System.EventHandler<ActivateLicenseCompletedEventArgs> ActivateLicenseCompleted;
        
        public event System.EventHandler<ValidateLicenseCompletedEventArgs> ValidateLicenseCompleted;
        
        public event System.EventHandler<CreateOrUpdateLeaderBoardCompletedEventArgs> CreateOrUpdateLeaderBoardCompleted;
        
        public event System.EventHandler<CreateOrUpdateLeaderBoardEntryCompletedEventArgs> CreateOrUpdateLeaderBoardEntryCompleted;
        
        public event System.EventHandler<GetApplicationByInstallerCompletedEventArgs> GetApplicationByInstallerCompleted;
        
        public event System.EventHandler<CreatePurchaseForLatestVersionCompletedEventArgs> CreatePurchaseForLatestVersionCompleted;
        
        public event System.EventHandler<CreatePurchaseCompletedEventArgs> CreatePurchaseCompleted;
        
        public event System.EventHandler<GetApplicationByKeyCompletedEventArgs> GetApplicationByKeyCompleted;
        
        public event System.EventHandler<GetApplicationVersionByApplicationIDAndVersionCompletedEventArgs> GetApplicationVersionByApplicationIDAndVersionCompleted;
        
        public event System.EventHandler<GetLatestApplicationVersionByApplicationIDCompletedEventArgs> GetLatestApplicationVersionByApplicationIDCompleted;
        
        public QuantumConcepts.Common.QCConnectWS.ErrorReport CreateErrorReport(string applicationKey, string deviceUniqueID, string code, string message, string stackTrace) {
            return base.Channel.CreateErrorReport(applicationKey, deviceUniqueID, code, message, stackTrace);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginCreateErrorReport(string applicationKey, string deviceUniqueID, string code, string message, string stackTrace, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginCreateErrorReport(applicationKey, deviceUniqueID, code, message, stackTrace, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public QuantumConcepts.Common.QCConnectWS.ErrorReport EndCreateErrorReport(System.IAsyncResult result) {
            return base.Channel.EndCreateErrorReport(result);
        }
        
        private System.IAsyncResult OnBeginCreateErrorReport(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string applicationKey = ((string)(inValues[0]));
            string deviceUniqueID = ((string)(inValues[1]));
            string code = ((string)(inValues[2]));
            string message = ((string)(inValues[3]));
            string stackTrace = ((string)(inValues[4]));
            return this.BeginCreateErrorReport(applicationKey, deviceUniqueID, code, message, stackTrace, callback, asyncState);
        }
        
        private object[] OnEndCreateErrorReport(System.IAsyncResult result) {
            QuantumConcepts.Common.QCConnectWS.ErrorReport retVal = this.EndCreateErrorReport(result);
            return new object[] {
                    retVal};
        }
        
        private void OnCreateErrorReportCompleted(object state) {
            if ((this.CreateErrorReportCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CreateErrorReportCompleted(this, new CreateErrorReportCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CreateErrorReportAsync(string applicationKey, string deviceUniqueID, string code, string message, string stackTrace) {
            this.CreateErrorReportAsync(applicationKey, deviceUniqueID, code, message, stackTrace, null);
        }
        
        public void CreateErrorReportAsync(string applicationKey, string deviceUniqueID, string code, string message, string stackTrace, object userState) {
            if ((this.onBeginCreateErrorReportDelegate == null)) {
                this.onBeginCreateErrorReportDelegate = new BeginOperationDelegate(this.OnBeginCreateErrorReport);
            }
            if ((this.onEndCreateErrorReportDelegate == null)) {
                this.onEndCreateErrorReportDelegate = new EndOperationDelegate(this.OnEndCreateErrorReport);
            }
            if ((this.onCreateErrorReportCompletedDelegate == null)) {
                this.onCreateErrorReportCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCreateErrorReportCompleted);
            }
            base.InvokeAsync(this.onBeginCreateErrorReportDelegate, new object[] {
                        applicationKey,
                        deviceUniqueID,
                        code,
                        message,
                        stackTrace}, this.onEndCreateErrorReportDelegate, this.onCreateErrorReportCompletedDelegate, userState);
        }
        
        public QuantumConcepts.Common.QCConnectWS.Feedback CreateFeedback(string applicationKey, string deviceUniqueID, string emailAddress, string subject, string message) {
            return base.Channel.CreateFeedback(applicationKey, deviceUniqueID, emailAddress, subject, message);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginCreateFeedback(string applicationKey, string deviceUniqueID, string emailAddress, string subject, string message, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginCreateFeedback(applicationKey, deviceUniqueID, emailAddress, subject, message, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public QuantumConcepts.Common.QCConnectWS.Feedback EndCreateFeedback(System.IAsyncResult result) {
            return base.Channel.EndCreateFeedback(result);
        }
        
        private System.IAsyncResult OnBeginCreateFeedback(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string applicationKey = ((string)(inValues[0]));
            string deviceUniqueID = ((string)(inValues[1]));
            string emailAddress = ((string)(inValues[2]));
            string subject = ((string)(inValues[3]));
            string message = ((string)(inValues[4]));
            return this.BeginCreateFeedback(applicationKey, deviceUniqueID, emailAddress, subject, message, callback, asyncState);
        }
        
        private object[] OnEndCreateFeedback(System.IAsyncResult result) {
            QuantumConcepts.Common.QCConnectWS.Feedback retVal = this.EndCreateFeedback(result);
            return new object[] {
                    retVal};
        }
        
        private void OnCreateFeedbackCompleted(object state) {
            if ((this.CreateFeedbackCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CreateFeedbackCompleted(this, new CreateFeedbackCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CreateFeedbackAsync(string applicationKey, string deviceUniqueID, string emailAddress, string subject, string message) {
            this.CreateFeedbackAsync(applicationKey, deviceUniqueID, emailAddress, subject, message, null);
        }
        
        public void CreateFeedbackAsync(string applicationKey, string deviceUniqueID, string emailAddress, string subject, string message, object userState) {
            if ((this.onBeginCreateFeedbackDelegate == null)) {
                this.onBeginCreateFeedbackDelegate = new BeginOperationDelegate(this.OnBeginCreateFeedback);
            }
            if ((this.onEndCreateFeedbackDelegate == null)) {
                this.onEndCreateFeedbackDelegate = new EndOperationDelegate(this.OnEndCreateFeedback);
            }
            if ((this.onCreateFeedbackCompletedDelegate == null)) {
                this.onCreateFeedbackCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCreateFeedbackCompleted);
            }
            base.InvokeAsync(this.onBeginCreateFeedbackDelegate, new object[] {
                        applicationKey,
                        deviceUniqueID,
                        emailAddress,
                        subject,
                        message}, this.onEndCreateFeedbackDelegate, this.onCreateFeedbackCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        QuantumConcepts.Common.QCConnectWS.CreateDownloadLogResponse QuantumConcepts.Common.QCConnectWS.ServiceSoap.CreateDownloadLog(QuantumConcepts.Common.QCConnectWS.CreateDownloadLogRequest request) {
            return base.Channel.CreateDownloadLog(request);
        }
        
        public QuantumConcepts.Common.QCConnectWS.DownloadLog CreateDownloadLog(QuantumConcepts.Common.QCConnectWS.Authorization Authorization, int applicationVersionID, System.Nullable<int> userID, string referenceNumber) {
            QuantumConcepts.Common.QCConnectWS.CreateDownloadLogRequest inValue = new QuantumConcepts.Common.QCConnectWS.CreateDownloadLogRequest();
            inValue.Authorization = Authorization;
            inValue.applicationVersionID = applicationVersionID;
            inValue.userID = userID;
            inValue.referenceNumber = referenceNumber;
            QuantumConcepts.Common.QCConnectWS.CreateDownloadLogResponse retVal = ((QuantumConcepts.Common.QCConnectWS.ServiceSoap)(this)).CreateDownloadLog(inValue);
            return retVal.CreateDownloadLogResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult QuantumConcepts.Common.QCConnectWS.ServiceSoap.BeginCreateDownloadLog(QuantumConcepts.Common.QCConnectWS.CreateDownloadLogRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginCreateDownloadLog(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginCreateDownloadLog(QuantumConcepts.Common.QCConnectWS.Authorization Authorization, int applicationVersionID, System.Nullable<int> userID, string referenceNumber, System.AsyncCallback callback, object asyncState) {
            QuantumConcepts.Common.QCConnectWS.CreateDownloadLogRequest inValue = new QuantumConcepts.Common.QCConnectWS.CreateDownloadLogRequest();
            inValue.Authorization = Authorization;
            inValue.applicationVersionID = applicationVersionID;
            inValue.userID = userID;
            inValue.referenceNumber = referenceNumber;
            return ((QuantumConcepts.Common.QCConnectWS.ServiceSoap)(this)).BeginCreateDownloadLog(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        QuantumConcepts.Common.QCConnectWS.CreateDownloadLogResponse QuantumConcepts.Common.QCConnectWS.ServiceSoap.EndCreateDownloadLog(System.IAsyncResult result) {
            return base.Channel.EndCreateDownloadLog(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public QuantumConcepts.Common.QCConnectWS.DownloadLog EndCreateDownloadLog(System.IAsyncResult result) {
            QuantumConcepts.Common.QCConnectWS.CreateDownloadLogResponse retVal = ((QuantumConcepts.Common.QCConnectWS.ServiceSoap)(this)).EndCreateDownloadLog(result);
            return retVal.CreateDownloadLogResult;
        }
        
        private System.IAsyncResult OnBeginCreateDownloadLog(object[] inValues, System.AsyncCallback callback, object asyncState) {
            QuantumConcepts.Common.QCConnectWS.Authorization Authorization = ((QuantumConcepts.Common.QCConnectWS.Authorization)(inValues[0]));
            int applicationVersionID = ((int)(inValues[1]));
            System.Nullable<int> userID = ((System.Nullable<int>)(inValues[2]));
            string referenceNumber = ((string)(inValues[3]));
            return this.BeginCreateDownloadLog(Authorization, applicationVersionID, userID, referenceNumber, callback, asyncState);
        }
        
        private object[] OnEndCreateDownloadLog(System.IAsyncResult result) {
            QuantumConcepts.Common.QCConnectWS.DownloadLog retVal = this.EndCreateDownloadLog(result);
            return new object[] {
                    retVal};
        }
        
        private void OnCreateDownloadLogCompleted(object state) {
            if ((this.CreateDownloadLogCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CreateDownloadLogCompleted(this, new CreateDownloadLogCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CreateDownloadLogAsync(QuantumConcepts.Common.QCConnectWS.Authorization Authorization, int applicationVersionID, System.Nullable<int> userID, string referenceNumber) {
            this.CreateDownloadLogAsync(Authorization, applicationVersionID, userID, referenceNumber, null);
        }
        
        public void CreateDownloadLogAsync(QuantumConcepts.Common.QCConnectWS.Authorization Authorization, int applicationVersionID, System.Nullable<int> userID, string referenceNumber, object userState) {
            if ((this.onBeginCreateDownloadLogDelegate == null)) {
                this.onBeginCreateDownloadLogDelegate = new BeginOperationDelegate(this.OnBeginCreateDownloadLog);
            }
            if ((this.onEndCreateDownloadLogDelegate == null)) {
                this.onEndCreateDownloadLogDelegate = new EndOperationDelegate(this.OnEndCreateDownloadLog);
            }
            if ((this.onCreateDownloadLogCompletedDelegate == null)) {
                this.onCreateDownloadLogCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCreateDownloadLogCompleted);
            }
            base.InvokeAsync(this.onBeginCreateDownloadLogDelegate, new object[] {
                        Authorization,
                        applicationVersionID,
                        userID,
                        referenceNumber}, this.onEndCreateDownloadLogDelegate, this.onCreateDownloadLogCompletedDelegate, userState);
        }
        
        public QuantumConcepts.Common.QCConnectWS.ApplicationRegistration RegisterApplicationForDevice(string firstName, string lastName, string emailAddress, string applicationKey, int major, int minor, int build, int revision, string deviceUniqueID) {
            return base.Channel.RegisterApplicationForDevice(firstName, lastName, emailAddress, applicationKey, major, minor, build, revision, deviceUniqueID);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginRegisterApplicationForDevice(string firstName, string lastName, string emailAddress, string applicationKey, int major, int minor, int build, int revision, string deviceUniqueID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginRegisterApplicationForDevice(firstName, lastName, emailAddress, applicationKey, major, minor, build, revision, deviceUniqueID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public QuantumConcepts.Common.QCConnectWS.ApplicationRegistration EndRegisterApplicationForDevice(System.IAsyncResult result) {
            return base.Channel.EndRegisterApplicationForDevice(result);
        }
        
        private System.IAsyncResult OnBeginRegisterApplicationForDevice(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string firstName = ((string)(inValues[0]));
            string lastName = ((string)(inValues[1]));
            string emailAddress = ((string)(inValues[2]));
            string applicationKey = ((string)(inValues[3]));
            int major = ((int)(inValues[4]));
            int minor = ((int)(inValues[5]));
            int build = ((int)(inValues[6]));
            int revision = ((int)(inValues[7]));
            string deviceUniqueID = ((string)(inValues[8]));
            return this.BeginRegisterApplicationForDevice(firstName, lastName, emailAddress, applicationKey, major, minor, build, revision, deviceUniqueID, callback, asyncState);
        }
        
        private object[] OnEndRegisterApplicationForDevice(System.IAsyncResult result) {
            QuantumConcepts.Common.QCConnectWS.ApplicationRegistration retVal = this.EndRegisterApplicationForDevice(result);
            return new object[] {
                    retVal};
        }
        
        private void OnRegisterApplicationForDeviceCompleted(object state) {
            if ((this.RegisterApplicationForDeviceCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.RegisterApplicationForDeviceCompleted(this, new RegisterApplicationForDeviceCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void RegisterApplicationForDeviceAsync(string firstName, string lastName, string emailAddress, string applicationKey, int major, int minor, int build, int revision, string deviceUniqueID) {
            this.RegisterApplicationForDeviceAsync(firstName, lastName, emailAddress, applicationKey, major, minor, build, revision, deviceUniqueID, null);
        }
        
        public void RegisterApplicationForDeviceAsync(string firstName, string lastName, string emailAddress, string applicationKey, int major, int minor, int build, int revision, string deviceUniqueID, object userState) {
            if ((this.onBeginRegisterApplicationForDeviceDelegate == null)) {
                this.onBeginRegisterApplicationForDeviceDelegate = new BeginOperationDelegate(this.OnBeginRegisterApplicationForDevice);
            }
            if ((this.onEndRegisterApplicationForDeviceDelegate == null)) {
                this.onEndRegisterApplicationForDeviceDelegate = new EndOperationDelegate(this.OnEndRegisterApplicationForDevice);
            }
            if ((this.onRegisterApplicationForDeviceCompletedDelegate == null)) {
                this.onRegisterApplicationForDeviceCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnRegisterApplicationForDeviceCompleted);
            }
            base.InvokeAsync(this.onBeginRegisterApplicationForDeviceDelegate, new object[] {
                        firstName,
                        lastName,
                        emailAddress,
                        applicationKey,
                        major,
                        minor,
                        build,
                        revision,
                        deviceUniqueID}, this.onEndRegisterApplicationForDeviceDelegate, this.onRegisterApplicationForDeviceCompletedDelegate, userState);
        }
        
        public QuantumConcepts.Common.QCConnectWS.ApplicationRegistration RegisterApplicationForDevice2(string firstName, string lastName, string emailAddress, string displayName, string applicationKey, int major, int minor, int build, int revision, string deviceUniqueID) {
            return base.Channel.RegisterApplicationForDevice2(firstName, lastName, emailAddress, displayName, applicationKey, major, minor, build, revision, deviceUniqueID);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginRegisterApplicationForDevice2(string firstName, string lastName, string emailAddress, string displayName, string applicationKey, int major, int minor, int build, int revision, string deviceUniqueID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginRegisterApplicationForDevice2(firstName, lastName, emailAddress, displayName, applicationKey, major, minor, build, revision, deviceUniqueID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public QuantumConcepts.Common.QCConnectWS.ApplicationRegistration EndRegisterApplicationForDevice2(System.IAsyncResult result) {
            return base.Channel.EndRegisterApplicationForDevice2(result);
        }
        
        private System.IAsyncResult OnBeginRegisterApplicationForDevice2(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string firstName = ((string)(inValues[0]));
            string lastName = ((string)(inValues[1]));
            string emailAddress = ((string)(inValues[2]));
            string displayName = ((string)(inValues[3]));
            string applicationKey = ((string)(inValues[4]));
            int major = ((int)(inValues[5]));
            int minor = ((int)(inValues[6]));
            int build = ((int)(inValues[7]));
            int revision = ((int)(inValues[8]));
            string deviceUniqueID = ((string)(inValues[9]));
            return this.BeginRegisterApplicationForDevice2(firstName, lastName, emailAddress, displayName, applicationKey, major, minor, build, revision, deviceUniqueID, callback, asyncState);
        }
        
        private object[] OnEndRegisterApplicationForDevice2(System.IAsyncResult result) {
            QuantumConcepts.Common.QCConnectWS.ApplicationRegistration retVal = this.EndRegisterApplicationForDevice2(result);
            return new object[] {
                    retVal};
        }
        
        private void OnRegisterApplicationForDevice2Completed(object state) {
            if ((this.RegisterApplicationForDevice2Completed != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.RegisterApplicationForDevice2Completed(this, new RegisterApplicationForDevice2CompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void RegisterApplicationForDevice2Async(string firstName, string lastName, string emailAddress, string displayName, string applicationKey, int major, int minor, int build, int revision, string deviceUniqueID) {
            this.RegisterApplicationForDevice2Async(firstName, lastName, emailAddress, displayName, applicationKey, major, minor, build, revision, deviceUniqueID, null);
        }
        
        public void RegisterApplicationForDevice2Async(string firstName, string lastName, string emailAddress, string displayName, string applicationKey, int major, int minor, int build, int revision, string deviceUniqueID, object userState) {
            if ((this.onBeginRegisterApplicationForDevice2Delegate == null)) {
                this.onBeginRegisterApplicationForDevice2Delegate = new BeginOperationDelegate(this.OnBeginRegisterApplicationForDevice2);
            }
            if ((this.onEndRegisterApplicationForDevice2Delegate == null)) {
                this.onEndRegisterApplicationForDevice2Delegate = new EndOperationDelegate(this.OnEndRegisterApplicationForDevice2);
            }
            if ((this.onRegisterApplicationForDevice2CompletedDelegate == null)) {
                this.onRegisterApplicationForDevice2CompletedDelegate = new System.Threading.SendOrPostCallback(this.OnRegisterApplicationForDevice2Completed);
            }
            base.InvokeAsync(this.onBeginRegisterApplicationForDevice2Delegate, new object[] {
                        firstName,
                        lastName,
                        emailAddress,
                        displayName,
                        applicationKey,
                        major,
                        minor,
                        build,
                        revision,
                        deviceUniqueID}, this.onEndRegisterApplicationForDevice2Delegate, this.onRegisterApplicationForDevice2CompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        QuantumConcepts.Common.QCConnectWS.CheckForUpgradeResponse QuantumConcepts.Common.QCConnectWS.ServiceSoap.CheckForUpgrade(QuantumConcepts.Common.QCConnectWS.CheckForUpgradeRequest request) {
            return base.Channel.CheckForUpgrade(request);
        }
        
        public QuantumConcepts.Common.QCConnectWS.ApplicationVersion CheckForUpgrade(QuantumConcepts.Common.QCConnectWS.Authorization Authorization, string applicationKey, int major, int minor, int build, int revision) {
            QuantumConcepts.Common.QCConnectWS.CheckForUpgradeRequest inValue = new QuantumConcepts.Common.QCConnectWS.CheckForUpgradeRequest();
            inValue.Authorization = Authorization;
            inValue.applicationKey = applicationKey;
            inValue.major = major;
            inValue.minor = minor;
            inValue.build = build;
            inValue.revision = revision;
            QuantumConcepts.Common.QCConnectWS.CheckForUpgradeResponse retVal = ((QuantumConcepts.Common.QCConnectWS.ServiceSoap)(this)).CheckForUpgrade(inValue);
            return retVal.CheckForUpgradeResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult QuantumConcepts.Common.QCConnectWS.ServiceSoap.BeginCheckForUpgrade(QuantumConcepts.Common.QCConnectWS.CheckForUpgradeRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginCheckForUpgrade(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginCheckForUpgrade(QuantumConcepts.Common.QCConnectWS.Authorization Authorization, string applicationKey, int major, int minor, int build, int revision, System.AsyncCallback callback, object asyncState) {
            QuantumConcepts.Common.QCConnectWS.CheckForUpgradeRequest inValue = new QuantumConcepts.Common.QCConnectWS.CheckForUpgradeRequest();
            inValue.Authorization = Authorization;
            inValue.applicationKey = applicationKey;
            inValue.major = major;
            inValue.minor = minor;
            inValue.build = build;
            inValue.revision = revision;
            return ((QuantumConcepts.Common.QCConnectWS.ServiceSoap)(this)).BeginCheckForUpgrade(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        QuantumConcepts.Common.QCConnectWS.CheckForUpgradeResponse QuantumConcepts.Common.QCConnectWS.ServiceSoap.EndCheckForUpgrade(System.IAsyncResult result) {
            return base.Channel.EndCheckForUpgrade(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public QuantumConcepts.Common.QCConnectWS.ApplicationVersion EndCheckForUpgrade(System.IAsyncResult result) {
            QuantumConcepts.Common.QCConnectWS.CheckForUpgradeResponse retVal = ((QuantumConcepts.Common.QCConnectWS.ServiceSoap)(this)).EndCheckForUpgrade(result);
            return retVal.CheckForUpgradeResult;
        }
        
        private System.IAsyncResult OnBeginCheckForUpgrade(object[] inValues, System.AsyncCallback callback, object asyncState) {
            QuantumConcepts.Common.QCConnectWS.Authorization Authorization = ((QuantumConcepts.Common.QCConnectWS.Authorization)(inValues[0]));
            string applicationKey = ((string)(inValues[1]));
            int major = ((int)(inValues[2]));
            int minor = ((int)(inValues[3]));
            int build = ((int)(inValues[4]));
            int revision = ((int)(inValues[5]));
            return this.BeginCheckForUpgrade(Authorization, applicationKey, major, minor, build, revision, callback, asyncState);
        }
        
        private object[] OnEndCheckForUpgrade(System.IAsyncResult result) {
            QuantumConcepts.Common.QCConnectWS.ApplicationVersion retVal = this.EndCheckForUpgrade(result);
            return new object[] {
                    retVal};
        }
        
        private void OnCheckForUpgradeCompleted(object state) {
            if ((this.CheckForUpgradeCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CheckForUpgradeCompleted(this, new CheckForUpgradeCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CheckForUpgradeAsync(QuantumConcepts.Common.QCConnectWS.Authorization Authorization, string applicationKey, int major, int minor, int build, int revision) {
            this.CheckForUpgradeAsync(Authorization, applicationKey, major, minor, build, revision, null);
        }
        
        public void CheckForUpgradeAsync(QuantumConcepts.Common.QCConnectWS.Authorization Authorization, string applicationKey, int major, int minor, int build, int revision, object userState) {
            if ((this.onBeginCheckForUpgradeDelegate == null)) {
                this.onBeginCheckForUpgradeDelegate = new BeginOperationDelegate(this.OnBeginCheckForUpgrade);
            }
            if ((this.onEndCheckForUpgradeDelegate == null)) {
                this.onEndCheckForUpgradeDelegate = new EndOperationDelegate(this.OnEndCheckForUpgrade);
            }
            if ((this.onCheckForUpgradeCompletedDelegate == null)) {
                this.onCheckForUpgradeCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCheckForUpgradeCompleted);
            }
            base.InvokeAsync(this.onBeginCheckForUpgradeDelegate, new object[] {
                        Authorization,
                        applicationKey,
                        major,
                        minor,
                        build,
                        revision}, this.onEndCheckForUpgradeDelegate, this.onCheckForUpgradeCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        QuantumConcepts.Common.QCConnectWS.CreateLicenseForPurchaseResponse QuantumConcepts.Common.QCConnectWS.ServiceSoap.CreateLicenseForPurchase(QuantumConcepts.Common.QCConnectWS.CreateLicenseForPurchaseRequest request) {
            return base.Channel.CreateLicenseForPurchase(request);
        }
        
        public int CreateLicenseForPurchase(QuantumConcepts.Common.QCConnectWS.Authorization Authorization, string applicationKey, int major, int minor, int build, int revision, QuantumConcepts.Common.QCConnectWS.ApplicationVersionDistributionPublisher publisher, string referenceNumber, string firstName, string lastName, string emailAddress, bool isTrial, System.Nullable<System.DateTime> expirationDate, System.Nullable<decimal> adjustedPrice) {
            QuantumConcepts.Common.QCConnectWS.CreateLicenseForPurchaseRequest inValue = new QuantumConcepts.Common.QCConnectWS.CreateLicenseForPurchaseRequest();
            inValue.Authorization = Authorization;
            inValue.applicationKey = applicationKey;
            inValue.major = major;
            inValue.minor = minor;
            inValue.build = build;
            inValue.revision = revision;
            inValue.publisher = publisher;
            inValue.referenceNumber = referenceNumber;
            inValue.firstName = firstName;
            inValue.lastName = lastName;
            inValue.emailAddress = emailAddress;
            inValue.isTrial = isTrial;
            inValue.expirationDate = expirationDate;
            inValue.adjustedPrice = adjustedPrice;
            QuantumConcepts.Common.QCConnectWS.CreateLicenseForPurchaseResponse retVal = ((QuantumConcepts.Common.QCConnectWS.ServiceSoap)(this)).CreateLicenseForPurchase(inValue);
            return retVal.CreateLicenseForPurchaseResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult QuantumConcepts.Common.QCConnectWS.ServiceSoap.BeginCreateLicenseForPurchase(QuantumConcepts.Common.QCConnectWS.CreateLicenseForPurchaseRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginCreateLicenseForPurchase(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginCreateLicenseForPurchase(
                    QuantumConcepts.Common.QCConnectWS.Authorization Authorization, 
                    string applicationKey, 
                    int major, 
                    int minor, 
                    int build, 
                    int revision, 
                    QuantumConcepts.Common.QCConnectWS.ApplicationVersionDistributionPublisher publisher, 
                    string referenceNumber, 
                    string firstName, 
                    string lastName, 
                    string emailAddress, 
                    bool isTrial, 
                    System.Nullable<System.DateTime> expirationDate, 
                    System.Nullable<decimal> adjustedPrice, 
                    System.AsyncCallback callback, 
                    object asyncState) {
            QuantumConcepts.Common.QCConnectWS.CreateLicenseForPurchaseRequest inValue = new QuantumConcepts.Common.QCConnectWS.CreateLicenseForPurchaseRequest();
            inValue.Authorization = Authorization;
            inValue.applicationKey = applicationKey;
            inValue.major = major;
            inValue.minor = minor;
            inValue.build = build;
            inValue.revision = revision;
            inValue.publisher = publisher;
            inValue.referenceNumber = referenceNumber;
            inValue.firstName = firstName;
            inValue.lastName = lastName;
            inValue.emailAddress = emailAddress;
            inValue.isTrial = isTrial;
            inValue.expirationDate = expirationDate;
            inValue.adjustedPrice = adjustedPrice;
            return ((QuantumConcepts.Common.QCConnectWS.ServiceSoap)(this)).BeginCreateLicenseForPurchase(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        QuantumConcepts.Common.QCConnectWS.CreateLicenseForPurchaseResponse QuantumConcepts.Common.QCConnectWS.ServiceSoap.EndCreateLicenseForPurchase(System.IAsyncResult result) {
            return base.Channel.EndCreateLicenseForPurchase(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public int EndCreateLicenseForPurchase(System.IAsyncResult result) {
            QuantumConcepts.Common.QCConnectWS.CreateLicenseForPurchaseResponse retVal = ((QuantumConcepts.Common.QCConnectWS.ServiceSoap)(this)).EndCreateLicenseForPurchase(result);
            return retVal.CreateLicenseForPurchaseResult;
        }
        
        private System.IAsyncResult OnBeginCreateLicenseForPurchase(object[] inValues, System.AsyncCallback callback, object asyncState) {
            QuantumConcepts.Common.QCConnectWS.Authorization Authorization = ((QuantumConcepts.Common.QCConnectWS.Authorization)(inValues[0]));
            string applicationKey = ((string)(inValues[1]));
            int major = ((int)(inValues[2]));
            int minor = ((int)(inValues[3]));
            int build = ((int)(inValues[4]));
            int revision = ((int)(inValues[5]));
            QuantumConcepts.Common.QCConnectWS.ApplicationVersionDistributionPublisher publisher = ((QuantumConcepts.Common.QCConnectWS.ApplicationVersionDistributionPublisher)(inValues[6]));
            string referenceNumber = ((string)(inValues[7]));
            string firstName = ((string)(inValues[8]));
            string lastName = ((string)(inValues[9]));
            string emailAddress = ((string)(inValues[10]));
            bool isTrial = ((bool)(inValues[11]));
            System.Nullable<System.DateTime> expirationDate = ((System.Nullable<System.DateTime>)(inValues[12]));
            System.Nullable<decimal> adjustedPrice = ((System.Nullable<decimal>)(inValues[13]));
            return this.BeginCreateLicenseForPurchase(Authorization, applicationKey, major, minor, build, revision, publisher, referenceNumber, firstName, lastName, emailAddress, isTrial, expirationDate, adjustedPrice, callback, asyncState);
        }
        
        private object[] OnEndCreateLicenseForPurchase(System.IAsyncResult result) {
            int retVal = this.EndCreateLicenseForPurchase(result);
            return new object[] {
                    retVal};
        }
        
        private void OnCreateLicenseForPurchaseCompleted(object state) {
            if ((this.CreateLicenseForPurchaseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CreateLicenseForPurchaseCompleted(this, new CreateLicenseForPurchaseCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CreateLicenseForPurchaseAsync(QuantumConcepts.Common.QCConnectWS.Authorization Authorization, string applicationKey, int major, int minor, int build, int revision, QuantumConcepts.Common.QCConnectWS.ApplicationVersionDistributionPublisher publisher, string referenceNumber, string firstName, string lastName, string emailAddress, bool isTrial, System.Nullable<System.DateTime> expirationDate, System.Nullable<decimal> adjustedPrice) {
            this.CreateLicenseForPurchaseAsync(Authorization, applicationKey, major, minor, build, revision, publisher, referenceNumber, firstName, lastName, emailAddress, isTrial, expirationDate, adjustedPrice, null);
        }
        
        public void CreateLicenseForPurchaseAsync(QuantumConcepts.Common.QCConnectWS.Authorization Authorization, string applicationKey, int major, int minor, int build, int revision, QuantumConcepts.Common.QCConnectWS.ApplicationVersionDistributionPublisher publisher, string referenceNumber, string firstName, string lastName, string emailAddress, bool isTrial, System.Nullable<System.DateTime> expirationDate, System.Nullable<decimal> adjustedPrice, object userState) {
            if ((this.onBeginCreateLicenseForPurchaseDelegate == null)) {
                this.onBeginCreateLicenseForPurchaseDelegate = new BeginOperationDelegate(this.OnBeginCreateLicenseForPurchase);
            }
            if ((this.onEndCreateLicenseForPurchaseDelegate == null)) {
                this.onEndCreateLicenseForPurchaseDelegate = new EndOperationDelegate(this.OnEndCreateLicenseForPurchase);
            }
            if ((this.onCreateLicenseForPurchaseCompletedDelegate == null)) {
                this.onCreateLicenseForPurchaseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCreateLicenseForPurchaseCompleted);
            }
            base.InvokeAsync(this.onBeginCreateLicenseForPurchaseDelegate, new object[] {
                        Authorization,
                        applicationKey,
                        major,
                        minor,
                        build,
                        revision,
                        publisher,
                        referenceNumber,
                        firstName,
                        lastName,
                        emailAddress,
                        isTrial,
                        expirationDate,
                        adjustedPrice}, this.onEndCreateLicenseForPurchaseDelegate, this.onCreateLicenseForPurchaseCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        QuantumConcepts.Common.QCConnectWS.EmailLicenseResponse QuantumConcepts.Common.QCConnectWS.ServiceSoap.EmailLicense(QuantumConcepts.Common.QCConnectWS.EmailLicenseRequest request) {
            return base.Channel.EmailLicense(request);
        }
        
        public void EmailLicense(QuantumConcepts.Common.QCConnectWS.Authorization Authorization, int licenseID) {
            QuantumConcepts.Common.QCConnectWS.EmailLicenseRequest inValue = new QuantumConcepts.Common.QCConnectWS.EmailLicenseRequest();
            inValue.Authorization = Authorization;
            inValue.licenseID = licenseID;
            QuantumConcepts.Common.QCConnectWS.EmailLicenseResponse retVal = ((QuantumConcepts.Common.QCConnectWS.ServiceSoap)(this)).EmailLicense(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult QuantumConcepts.Common.QCConnectWS.ServiceSoap.BeginEmailLicense(QuantumConcepts.Common.QCConnectWS.EmailLicenseRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginEmailLicense(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginEmailLicense(QuantumConcepts.Common.QCConnectWS.Authorization Authorization, int licenseID, System.AsyncCallback callback, object asyncState) {
            QuantumConcepts.Common.QCConnectWS.EmailLicenseRequest inValue = new QuantumConcepts.Common.QCConnectWS.EmailLicenseRequest();
            inValue.Authorization = Authorization;
            inValue.licenseID = licenseID;
            return ((QuantumConcepts.Common.QCConnectWS.ServiceSoap)(this)).BeginEmailLicense(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        QuantumConcepts.Common.QCConnectWS.EmailLicenseResponse QuantumConcepts.Common.QCConnectWS.ServiceSoap.EndEmailLicense(System.IAsyncResult result) {
            return base.Channel.EndEmailLicense(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndEmailLicense(System.IAsyncResult result) {
            QuantumConcepts.Common.QCConnectWS.EmailLicenseResponse retVal = ((QuantumConcepts.Common.QCConnectWS.ServiceSoap)(this)).EndEmailLicense(result);
        }
        
        private System.IAsyncResult OnBeginEmailLicense(object[] inValues, System.AsyncCallback callback, object asyncState) {
            QuantumConcepts.Common.QCConnectWS.Authorization Authorization = ((QuantumConcepts.Common.QCConnectWS.Authorization)(inValues[0]));
            int licenseID = ((int)(inValues[1]));
            return this.BeginEmailLicense(Authorization, licenseID, callback, asyncState);
        }
        
        private object[] OnEndEmailLicense(System.IAsyncResult result) {
            this.EndEmailLicense(result);
            return null;
        }
        
        private void OnEmailLicenseCompleted(object state) {
            if ((this.EmailLicenseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.EmailLicenseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void EmailLicenseAsync(QuantumConcepts.Common.QCConnectWS.Authorization Authorization, int licenseID) {
            this.EmailLicenseAsync(Authorization, licenseID, null);
        }
        
        public void EmailLicenseAsync(QuantumConcepts.Common.QCConnectWS.Authorization Authorization, int licenseID, object userState) {
            if ((this.onBeginEmailLicenseDelegate == null)) {
                this.onBeginEmailLicenseDelegate = new BeginOperationDelegate(this.OnBeginEmailLicense);
            }
            if ((this.onEndEmailLicenseDelegate == null)) {
                this.onEndEmailLicenseDelegate = new EndOperationDelegate(this.OnEndEmailLicense);
            }
            if ((this.onEmailLicenseCompletedDelegate == null)) {
                this.onEmailLicenseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnEmailLicenseCompleted);
            }
            base.InvokeAsync(this.onBeginEmailLicenseDelegate, new object[] {
                        Authorization,
                        licenseID}, this.onEndEmailLicenseDelegate, this.onEmailLicenseCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        QuantumConcepts.Common.QCConnectWS.ActivateLicenseResponse QuantumConcepts.Common.QCConnectWS.ServiceSoap.ActivateLicense(QuantumConcepts.Common.QCConnectWS.ActivateLicenseRequest request) {
            return base.Channel.ActivateLicense(request);
        }
        
        public bool ActivateLicense(QuantumConcepts.Common.QCConnectWS.Authorization Authorization, string applicationKey, int major, int minor, int build, int revision, string emailAddress, byte[] licenseFile, ActivationProperty[] activationProperties, out byte[] activationFile) {
            QuantumConcepts.Common.QCConnectWS.ActivateLicenseRequest inValue = new QuantumConcepts.Common.QCConnectWS.ActivateLicenseRequest();
            inValue.Authorization = Authorization;
            inValue.applicationKey = applicationKey;
            inValue.major = major;
            inValue.minor = minor;
            inValue.build = build;
            inValue.revision = revision;
            inValue.emailAddress = emailAddress;
            inValue.licenseFile = licenseFile;
            inValue.activationProperties = activationProperties;
            QuantumConcepts.Common.QCConnectWS.ActivateLicenseResponse retVal = ((QuantumConcepts.Common.QCConnectWS.ServiceSoap)(this)).ActivateLicense(inValue);
            activationFile = retVal.activationFile;
            return retVal.ActivateLicenseResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult QuantumConcepts.Common.QCConnectWS.ServiceSoap.BeginActivateLicense(QuantumConcepts.Common.QCConnectWS.ActivateLicenseRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginActivateLicense(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginActivateLicense(QuantumConcepts.Common.QCConnectWS.Authorization Authorization, string applicationKey, int major, int minor, int build, int revision, string emailAddress, byte[] licenseFile, ActivationProperty[] activationProperties, System.AsyncCallback callback, object asyncState) {
            QuantumConcepts.Common.QCConnectWS.ActivateLicenseRequest inValue = new QuantumConcepts.Common.QCConnectWS.ActivateLicenseRequest();
            inValue.Authorization = Authorization;
            inValue.applicationKey = applicationKey;
            inValue.major = major;
            inValue.minor = minor;
            inValue.build = build;
            inValue.revision = revision;
            inValue.emailAddress = emailAddress;
            inValue.licenseFile = licenseFile;
            inValue.activationProperties = activationProperties;
            return ((QuantumConcepts.Common.QCConnectWS.ServiceSoap)(this)).BeginActivateLicense(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        QuantumConcepts.Common.QCConnectWS.ActivateLicenseResponse QuantumConcepts.Common.QCConnectWS.ServiceSoap.EndActivateLicense(System.IAsyncResult result) {
            return base.Channel.EndActivateLicense(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public bool EndActivateLicense(System.IAsyncResult result, out byte[] activationFile) {
            QuantumConcepts.Common.QCConnectWS.ActivateLicenseResponse retVal = ((QuantumConcepts.Common.QCConnectWS.ServiceSoap)(this)).EndActivateLicense(result);
            activationFile = retVal.activationFile;
            return retVal.ActivateLicenseResult;
        }
        
        private System.IAsyncResult OnBeginActivateLicense(object[] inValues, System.AsyncCallback callback, object asyncState) {
            QuantumConcepts.Common.QCConnectWS.Authorization Authorization = ((QuantumConcepts.Common.QCConnectWS.Authorization)(inValues[0]));
            string applicationKey = ((string)(inValues[1]));
            int major = ((int)(inValues[2]));
            int minor = ((int)(inValues[3]));
            int build = ((int)(inValues[4]));
            int revision = ((int)(inValues[5]));
            string emailAddress = ((string)(inValues[6]));
            byte[] licenseFile = ((byte[])(inValues[7]));
            ActivationProperty[] activationProperties = ((ActivationProperty[])(inValues[8]));
            return this.BeginActivateLicense(Authorization, applicationKey, major, minor, build, revision, emailAddress, licenseFile, activationProperties, callback, asyncState);
        }
        
        private object[] OnEndActivateLicense(System.IAsyncResult result) {
            byte[] activationFile = this.GetDefaultValueForInitialization<byte[]>();
            bool retVal = this.EndActivateLicense(result, out activationFile);
            return new object[] {
                    activationFile,
                    retVal};
        }
        
        private void OnActivateLicenseCompleted(object state) {
            if ((this.ActivateLicenseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ActivateLicenseCompleted(this, new ActivateLicenseCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ActivateLicenseAsync(QuantumConcepts.Common.QCConnectWS.Authorization Authorization, string applicationKey, int major, int minor, int build, int revision, string emailAddress, byte[] licenseFile, ActivationProperty[] activationProperties) {
            this.ActivateLicenseAsync(Authorization, applicationKey, major, minor, build, revision, emailAddress, licenseFile, activationProperties, null);
        }
        
        public void ActivateLicenseAsync(QuantumConcepts.Common.QCConnectWS.Authorization Authorization, string applicationKey, int major, int minor, int build, int revision, string emailAddress, byte[] licenseFile, ActivationProperty[] activationProperties, object userState) {
            if ((this.onBeginActivateLicenseDelegate == null)) {
                this.onBeginActivateLicenseDelegate = new BeginOperationDelegate(this.OnBeginActivateLicense);
            }
            if ((this.onEndActivateLicenseDelegate == null)) {
                this.onEndActivateLicenseDelegate = new EndOperationDelegate(this.OnEndActivateLicense);
            }
            if ((this.onActivateLicenseCompletedDelegate == null)) {
                this.onActivateLicenseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnActivateLicenseCompleted);
            }
            base.InvokeAsync(this.onBeginActivateLicenseDelegate, new object[] {
                        Authorization,
                        applicationKey,
                        major,
                        minor,
                        build,
                        revision,
                        emailAddress,
                        licenseFile,
                        activationProperties}, this.onEndActivateLicenseDelegate, this.onActivateLicenseCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        QuantumConcepts.Common.QCConnectWS.ValidateLicenseResponse QuantumConcepts.Common.QCConnectWS.ServiceSoap.ValidateLicense(QuantumConcepts.Common.QCConnectWS.ValidateLicenseRequest request) {
            return base.Channel.ValidateLicense(request);
        }
        
        public bool ValidateLicense(QuantumConcepts.Common.QCConnectWS.Authorization Authorization, string applicationKey, int major, int minor, int build, int revision, string emailAddress, byte[] licenseFile) {
            QuantumConcepts.Common.QCConnectWS.ValidateLicenseRequest inValue = new QuantumConcepts.Common.QCConnectWS.ValidateLicenseRequest();
            inValue.Authorization = Authorization;
            inValue.applicationKey = applicationKey;
            inValue.major = major;
            inValue.minor = minor;
            inValue.build = build;
            inValue.revision = revision;
            inValue.emailAddress = emailAddress;
            inValue.licenseFile = licenseFile;
            QuantumConcepts.Common.QCConnectWS.ValidateLicenseResponse retVal = ((QuantumConcepts.Common.QCConnectWS.ServiceSoap)(this)).ValidateLicense(inValue);
            return retVal.ValidateLicenseResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult QuantumConcepts.Common.QCConnectWS.ServiceSoap.BeginValidateLicense(QuantumConcepts.Common.QCConnectWS.ValidateLicenseRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginValidateLicense(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginValidateLicense(QuantumConcepts.Common.QCConnectWS.Authorization Authorization, string applicationKey, int major, int minor, int build, int revision, string emailAddress, byte[] licenseFile, System.AsyncCallback callback, object asyncState) {
            QuantumConcepts.Common.QCConnectWS.ValidateLicenseRequest inValue = new QuantumConcepts.Common.QCConnectWS.ValidateLicenseRequest();
            inValue.Authorization = Authorization;
            inValue.applicationKey = applicationKey;
            inValue.major = major;
            inValue.minor = minor;
            inValue.build = build;
            inValue.revision = revision;
            inValue.emailAddress = emailAddress;
            inValue.licenseFile = licenseFile;
            return ((QuantumConcepts.Common.QCConnectWS.ServiceSoap)(this)).BeginValidateLicense(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        QuantumConcepts.Common.QCConnectWS.ValidateLicenseResponse QuantumConcepts.Common.QCConnectWS.ServiceSoap.EndValidateLicense(System.IAsyncResult result) {
            return base.Channel.EndValidateLicense(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public bool EndValidateLicense(System.IAsyncResult result) {
            QuantumConcepts.Common.QCConnectWS.ValidateLicenseResponse retVal = ((QuantumConcepts.Common.QCConnectWS.ServiceSoap)(this)).EndValidateLicense(result);
            return retVal.ValidateLicenseResult;
        }
        
        private System.IAsyncResult OnBeginValidateLicense(object[] inValues, System.AsyncCallback callback, object asyncState) {
            QuantumConcepts.Common.QCConnectWS.Authorization Authorization = ((QuantumConcepts.Common.QCConnectWS.Authorization)(inValues[0]));
            string applicationKey = ((string)(inValues[1]));
            int major = ((int)(inValues[2]));
            int minor = ((int)(inValues[3]));
            int build = ((int)(inValues[4]));
            int revision = ((int)(inValues[5]));
            string emailAddress = ((string)(inValues[6]));
            byte[] licenseFile = ((byte[])(inValues[7]));
            return this.BeginValidateLicense(Authorization, applicationKey, major, minor, build, revision, emailAddress, licenseFile, callback, asyncState);
        }
        
        private object[] OnEndValidateLicense(System.IAsyncResult result) {
            bool retVal = this.EndValidateLicense(result);
            return new object[] {
                    retVal};
        }
        
        private void OnValidateLicenseCompleted(object state) {
            if ((this.ValidateLicenseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ValidateLicenseCompleted(this, new ValidateLicenseCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ValidateLicenseAsync(QuantumConcepts.Common.QCConnectWS.Authorization Authorization, string applicationKey, int major, int minor, int build, int revision, string emailAddress, byte[] licenseFile) {
            this.ValidateLicenseAsync(Authorization, applicationKey, major, minor, build, revision, emailAddress, licenseFile, null);
        }
        
        public void ValidateLicenseAsync(QuantumConcepts.Common.QCConnectWS.Authorization Authorization, string applicationKey, int major, int minor, int build, int revision, string emailAddress, byte[] licenseFile, object userState) {
            if ((this.onBeginValidateLicenseDelegate == null)) {
                this.onBeginValidateLicenseDelegate = new BeginOperationDelegate(this.OnBeginValidateLicense);
            }
            if ((this.onEndValidateLicenseDelegate == null)) {
                this.onEndValidateLicenseDelegate = new EndOperationDelegate(this.OnEndValidateLicense);
            }
            if ((this.onValidateLicenseCompletedDelegate == null)) {
                this.onValidateLicenseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnValidateLicenseCompleted);
            }
            base.InvokeAsync(this.onBeginValidateLicenseDelegate, new object[] {
                        Authorization,
                        applicationKey,
                        major,
                        minor,
                        build,
                        revision,
                        emailAddress,
                        licenseFile}, this.onEndValidateLicenseDelegate, this.onValidateLicenseCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        QuantumConcepts.Common.QCConnectWS.CreateOrUpdateLeaderBoardResponse QuantumConcepts.Common.QCConnectWS.ServiceSoap.CreateOrUpdateLeaderBoard(QuantumConcepts.Common.QCConnectWS.CreateOrUpdateLeaderBoardRequest request) {
            return base.Channel.CreateOrUpdateLeaderBoard(request);
        }
        
        public QuantumConcepts.Common.QCConnectWS.LeaderBoard CreateOrUpdateLeaderBoard(QuantumConcepts.Common.QCConnectWS.Authorization Authorization, string applicationKey, string key, string title) {
            QuantumConcepts.Common.QCConnectWS.CreateOrUpdateLeaderBoardRequest inValue = new QuantumConcepts.Common.QCConnectWS.CreateOrUpdateLeaderBoardRequest();
            inValue.Authorization = Authorization;
            inValue.applicationKey = applicationKey;
            inValue.key = key;
            inValue.title = title;
            QuantumConcepts.Common.QCConnectWS.CreateOrUpdateLeaderBoardResponse retVal = ((QuantumConcepts.Common.QCConnectWS.ServiceSoap)(this)).CreateOrUpdateLeaderBoard(inValue);
            return retVal.CreateOrUpdateLeaderBoardResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult QuantumConcepts.Common.QCConnectWS.ServiceSoap.BeginCreateOrUpdateLeaderBoard(QuantumConcepts.Common.QCConnectWS.CreateOrUpdateLeaderBoardRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginCreateOrUpdateLeaderBoard(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginCreateOrUpdateLeaderBoard(QuantumConcepts.Common.QCConnectWS.Authorization Authorization, string applicationKey, string key, string title, System.AsyncCallback callback, object asyncState) {
            QuantumConcepts.Common.QCConnectWS.CreateOrUpdateLeaderBoardRequest inValue = new QuantumConcepts.Common.QCConnectWS.CreateOrUpdateLeaderBoardRequest();
            inValue.Authorization = Authorization;
            inValue.applicationKey = applicationKey;
            inValue.key = key;
            inValue.title = title;
            return ((QuantumConcepts.Common.QCConnectWS.ServiceSoap)(this)).BeginCreateOrUpdateLeaderBoard(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        QuantumConcepts.Common.QCConnectWS.CreateOrUpdateLeaderBoardResponse QuantumConcepts.Common.QCConnectWS.ServiceSoap.EndCreateOrUpdateLeaderBoard(System.IAsyncResult result) {
            return base.Channel.EndCreateOrUpdateLeaderBoard(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public QuantumConcepts.Common.QCConnectWS.LeaderBoard EndCreateOrUpdateLeaderBoard(System.IAsyncResult result) {
            QuantumConcepts.Common.QCConnectWS.CreateOrUpdateLeaderBoardResponse retVal = ((QuantumConcepts.Common.QCConnectWS.ServiceSoap)(this)).EndCreateOrUpdateLeaderBoard(result);
            return retVal.CreateOrUpdateLeaderBoardResult;
        }
        
        private System.IAsyncResult OnBeginCreateOrUpdateLeaderBoard(object[] inValues, System.AsyncCallback callback, object asyncState) {
            QuantumConcepts.Common.QCConnectWS.Authorization Authorization = ((QuantumConcepts.Common.QCConnectWS.Authorization)(inValues[0]));
            string applicationKey = ((string)(inValues[1]));
            string key = ((string)(inValues[2]));
            string title = ((string)(inValues[3]));
            return this.BeginCreateOrUpdateLeaderBoard(Authorization, applicationKey, key, title, callback, asyncState);
        }
        
        private object[] OnEndCreateOrUpdateLeaderBoard(System.IAsyncResult result) {
            QuantumConcepts.Common.QCConnectWS.LeaderBoard retVal = this.EndCreateOrUpdateLeaderBoard(result);
            return new object[] {
                    retVal};
        }
        
        private void OnCreateOrUpdateLeaderBoardCompleted(object state) {
            if ((this.CreateOrUpdateLeaderBoardCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CreateOrUpdateLeaderBoardCompleted(this, new CreateOrUpdateLeaderBoardCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CreateOrUpdateLeaderBoardAsync(QuantumConcepts.Common.QCConnectWS.Authorization Authorization, string applicationKey, string key, string title) {
            this.CreateOrUpdateLeaderBoardAsync(Authorization, applicationKey, key, title, null);
        }
        
        public void CreateOrUpdateLeaderBoardAsync(QuantumConcepts.Common.QCConnectWS.Authorization Authorization, string applicationKey, string key, string title, object userState) {
            if ((this.onBeginCreateOrUpdateLeaderBoardDelegate == null)) {
                this.onBeginCreateOrUpdateLeaderBoardDelegate = new BeginOperationDelegate(this.OnBeginCreateOrUpdateLeaderBoard);
            }
            if ((this.onEndCreateOrUpdateLeaderBoardDelegate == null)) {
                this.onEndCreateOrUpdateLeaderBoardDelegate = new EndOperationDelegate(this.OnEndCreateOrUpdateLeaderBoard);
            }
            if ((this.onCreateOrUpdateLeaderBoardCompletedDelegate == null)) {
                this.onCreateOrUpdateLeaderBoardCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCreateOrUpdateLeaderBoardCompleted);
            }
            base.InvokeAsync(this.onBeginCreateOrUpdateLeaderBoardDelegate, new object[] {
                        Authorization,
                        applicationKey,
                        key,
                        title}, this.onEndCreateOrUpdateLeaderBoardDelegate, this.onCreateOrUpdateLeaderBoardCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        QuantumConcepts.Common.QCConnectWS.CreateOrUpdateLeaderBoardEntryResponse QuantumConcepts.Common.QCConnectWS.ServiceSoap.CreateOrUpdateLeaderBoardEntry(QuantumConcepts.Common.QCConnectWS.CreateOrUpdateLeaderBoardEntryRequest request) {
            return base.Channel.CreateOrUpdateLeaderBoardEntry(request);
        }
        
        public QuantumConcepts.Common.QCConnectWS.LeaderBoardEntry CreateOrUpdateLeaderBoardEntry(QuantumConcepts.Common.QCConnectWS.Authorization Authorization, string applicationKey, string key, string deviceUniqueID, int userID, long score) {
            QuantumConcepts.Common.QCConnectWS.CreateOrUpdateLeaderBoardEntryRequest inValue = new QuantumConcepts.Common.QCConnectWS.CreateOrUpdateLeaderBoardEntryRequest();
            inValue.Authorization = Authorization;
            inValue.applicationKey = applicationKey;
            inValue.key = key;
            inValue.deviceUniqueID = deviceUniqueID;
            inValue.userID = userID;
            inValue.score = score;
            QuantumConcepts.Common.QCConnectWS.CreateOrUpdateLeaderBoardEntryResponse retVal = ((QuantumConcepts.Common.QCConnectWS.ServiceSoap)(this)).CreateOrUpdateLeaderBoardEntry(inValue);
            return retVal.CreateOrUpdateLeaderBoardEntryResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult QuantumConcepts.Common.QCConnectWS.ServiceSoap.BeginCreateOrUpdateLeaderBoardEntry(QuantumConcepts.Common.QCConnectWS.CreateOrUpdateLeaderBoardEntryRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginCreateOrUpdateLeaderBoardEntry(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginCreateOrUpdateLeaderBoardEntry(QuantumConcepts.Common.QCConnectWS.Authorization Authorization, string applicationKey, string key, string deviceUniqueID, int userID, long score, System.AsyncCallback callback, object asyncState) {
            QuantumConcepts.Common.QCConnectWS.CreateOrUpdateLeaderBoardEntryRequest inValue = new QuantumConcepts.Common.QCConnectWS.CreateOrUpdateLeaderBoardEntryRequest();
            inValue.Authorization = Authorization;
            inValue.applicationKey = applicationKey;
            inValue.key = key;
            inValue.deviceUniqueID = deviceUniqueID;
            inValue.userID = userID;
            inValue.score = score;
            return ((QuantumConcepts.Common.QCConnectWS.ServiceSoap)(this)).BeginCreateOrUpdateLeaderBoardEntry(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        QuantumConcepts.Common.QCConnectWS.CreateOrUpdateLeaderBoardEntryResponse QuantumConcepts.Common.QCConnectWS.ServiceSoap.EndCreateOrUpdateLeaderBoardEntry(System.IAsyncResult result) {
            return base.Channel.EndCreateOrUpdateLeaderBoardEntry(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public QuantumConcepts.Common.QCConnectWS.LeaderBoardEntry EndCreateOrUpdateLeaderBoardEntry(System.IAsyncResult result) {
            QuantumConcepts.Common.QCConnectWS.CreateOrUpdateLeaderBoardEntryResponse retVal = ((QuantumConcepts.Common.QCConnectWS.ServiceSoap)(this)).EndCreateOrUpdateLeaderBoardEntry(result);
            return retVal.CreateOrUpdateLeaderBoardEntryResult;
        }
        
        private System.IAsyncResult OnBeginCreateOrUpdateLeaderBoardEntry(object[] inValues, System.AsyncCallback callback, object asyncState) {
            QuantumConcepts.Common.QCConnectWS.Authorization Authorization = ((QuantumConcepts.Common.QCConnectWS.Authorization)(inValues[0]));
            string applicationKey = ((string)(inValues[1]));
            string key = ((string)(inValues[2]));
            string deviceUniqueID = ((string)(inValues[3]));
            int userID = ((int)(inValues[4]));
            long score = ((long)(inValues[5]));
            return this.BeginCreateOrUpdateLeaderBoardEntry(Authorization, applicationKey, key, deviceUniqueID, userID, score, callback, asyncState);
        }
        
        private object[] OnEndCreateOrUpdateLeaderBoardEntry(System.IAsyncResult result) {
            QuantumConcepts.Common.QCConnectWS.LeaderBoardEntry retVal = this.EndCreateOrUpdateLeaderBoardEntry(result);
            return new object[] {
                    retVal};
        }
        
        private void OnCreateOrUpdateLeaderBoardEntryCompleted(object state) {
            if ((this.CreateOrUpdateLeaderBoardEntryCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CreateOrUpdateLeaderBoardEntryCompleted(this, new CreateOrUpdateLeaderBoardEntryCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CreateOrUpdateLeaderBoardEntryAsync(QuantumConcepts.Common.QCConnectWS.Authorization Authorization, string applicationKey, string key, string deviceUniqueID, int userID, long score) {
            this.CreateOrUpdateLeaderBoardEntryAsync(Authorization, applicationKey, key, deviceUniqueID, userID, score, null);
        }
        
        public void CreateOrUpdateLeaderBoardEntryAsync(QuantumConcepts.Common.QCConnectWS.Authorization Authorization, string applicationKey, string key, string deviceUniqueID, int userID, long score, object userState) {
            if ((this.onBeginCreateOrUpdateLeaderBoardEntryDelegate == null)) {
                this.onBeginCreateOrUpdateLeaderBoardEntryDelegate = new BeginOperationDelegate(this.OnBeginCreateOrUpdateLeaderBoardEntry);
            }
            if ((this.onEndCreateOrUpdateLeaderBoardEntryDelegate == null)) {
                this.onEndCreateOrUpdateLeaderBoardEntryDelegate = new EndOperationDelegate(this.OnEndCreateOrUpdateLeaderBoardEntry);
            }
            if ((this.onCreateOrUpdateLeaderBoardEntryCompletedDelegate == null)) {
                this.onCreateOrUpdateLeaderBoardEntryCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCreateOrUpdateLeaderBoardEntryCompleted);
            }
            base.InvokeAsync(this.onBeginCreateOrUpdateLeaderBoardEntryDelegate, new object[] {
                        Authorization,
                        applicationKey,
                        key,
                        deviceUniqueID,
                        userID,
                        score}, this.onEndCreateOrUpdateLeaderBoardEntryDelegate, this.onCreateOrUpdateLeaderBoardEntryCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        QuantumConcepts.Common.QCConnectWS.GetApplicationByInstallerResponse QuantumConcepts.Common.QCConnectWS.ServiceSoap.GetApplicationByInstaller(QuantumConcepts.Common.QCConnectWS.GetApplicationByInstallerRequest request) {
            return base.Channel.GetApplicationByInstaller(request);
        }
        
        public QuantumConcepts.Common.QCConnectWS.Application GetApplicationByInstaller(QuantumConcepts.Common.QCConnectWS.Authorization Authorization, string installerFileName, string installerFileExtension) {
            QuantumConcepts.Common.QCConnectWS.GetApplicationByInstallerRequest inValue = new QuantumConcepts.Common.QCConnectWS.GetApplicationByInstallerRequest();
            inValue.Authorization = Authorization;
            inValue.installerFileName = installerFileName;
            inValue.installerFileExtension = installerFileExtension;
            QuantumConcepts.Common.QCConnectWS.GetApplicationByInstallerResponse retVal = ((QuantumConcepts.Common.QCConnectWS.ServiceSoap)(this)).GetApplicationByInstaller(inValue);
            return retVal.GetApplicationByInstallerResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult QuantumConcepts.Common.QCConnectWS.ServiceSoap.BeginGetApplicationByInstaller(QuantumConcepts.Common.QCConnectWS.GetApplicationByInstallerRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetApplicationByInstaller(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetApplicationByInstaller(QuantumConcepts.Common.QCConnectWS.Authorization Authorization, string installerFileName, string installerFileExtension, System.AsyncCallback callback, object asyncState) {
            QuantumConcepts.Common.QCConnectWS.GetApplicationByInstallerRequest inValue = new QuantumConcepts.Common.QCConnectWS.GetApplicationByInstallerRequest();
            inValue.Authorization = Authorization;
            inValue.installerFileName = installerFileName;
            inValue.installerFileExtension = installerFileExtension;
            return ((QuantumConcepts.Common.QCConnectWS.ServiceSoap)(this)).BeginGetApplicationByInstaller(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        QuantumConcepts.Common.QCConnectWS.GetApplicationByInstallerResponse QuantumConcepts.Common.QCConnectWS.ServiceSoap.EndGetApplicationByInstaller(System.IAsyncResult result) {
            return base.Channel.EndGetApplicationByInstaller(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public QuantumConcepts.Common.QCConnectWS.Application EndGetApplicationByInstaller(System.IAsyncResult result) {
            QuantumConcepts.Common.QCConnectWS.GetApplicationByInstallerResponse retVal = ((QuantumConcepts.Common.QCConnectWS.ServiceSoap)(this)).EndGetApplicationByInstaller(result);
            return retVal.GetApplicationByInstallerResult;
        }
        
        private System.IAsyncResult OnBeginGetApplicationByInstaller(object[] inValues, System.AsyncCallback callback, object asyncState) {
            QuantumConcepts.Common.QCConnectWS.Authorization Authorization = ((QuantumConcepts.Common.QCConnectWS.Authorization)(inValues[0]));
            string installerFileName = ((string)(inValues[1]));
            string installerFileExtension = ((string)(inValues[2]));
            return this.BeginGetApplicationByInstaller(Authorization, installerFileName, installerFileExtension, callback, asyncState);
        }
        
        private object[] OnEndGetApplicationByInstaller(System.IAsyncResult result) {
            QuantumConcepts.Common.QCConnectWS.Application retVal = this.EndGetApplicationByInstaller(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetApplicationByInstallerCompleted(object state) {
            if ((this.GetApplicationByInstallerCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetApplicationByInstallerCompleted(this, new GetApplicationByInstallerCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetApplicationByInstallerAsync(QuantumConcepts.Common.QCConnectWS.Authorization Authorization, string installerFileName, string installerFileExtension) {
            this.GetApplicationByInstallerAsync(Authorization, installerFileName, installerFileExtension, null);
        }
        
        public void GetApplicationByInstallerAsync(QuantumConcepts.Common.QCConnectWS.Authorization Authorization, string installerFileName, string installerFileExtension, object userState) {
            if ((this.onBeginGetApplicationByInstallerDelegate == null)) {
                this.onBeginGetApplicationByInstallerDelegate = new BeginOperationDelegate(this.OnBeginGetApplicationByInstaller);
            }
            if ((this.onEndGetApplicationByInstallerDelegate == null)) {
                this.onEndGetApplicationByInstallerDelegate = new EndOperationDelegate(this.OnEndGetApplicationByInstaller);
            }
            if ((this.onGetApplicationByInstallerCompletedDelegate == null)) {
                this.onGetApplicationByInstallerCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetApplicationByInstallerCompleted);
            }
            base.InvokeAsync(this.onBeginGetApplicationByInstallerDelegate, new object[] {
                        Authorization,
                        installerFileName,
                        installerFileExtension}, this.onEndGetApplicationByInstallerDelegate, this.onGetApplicationByInstallerCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        QuantumConcepts.Common.QCConnectWS.CreatePurchaseForLatestVersionResponse QuantumConcepts.Common.QCConnectWS.ServiceSoap.CreatePurchaseForLatestVersion(QuantumConcepts.Common.QCConnectWS.CreatePurchaseForLatestVersionRequest request) {
            return base.Channel.CreatePurchaseForLatestVersion(request);
        }
        
        public QuantumConcepts.Common.QCConnectWS.Purchase CreatePurchaseForLatestVersion(QuantumConcepts.Common.QCConnectWS.Authorization Authorization, System.Nullable<int> userID, string applicationKey, QuantumConcepts.Common.QCConnectWS.ApplicationVersionDistributionPublisher publisher, string referenceNumber, decimal adjustedPrice) {
            QuantumConcepts.Common.QCConnectWS.CreatePurchaseForLatestVersionRequest inValue = new QuantumConcepts.Common.QCConnectWS.CreatePurchaseForLatestVersionRequest();
            inValue.Authorization = Authorization;
            inValue.userID = userID;
            inValue.applicationKey = applicationKey;
            inValue.publisher = publisher;
            inValue.referenceNumber = referenceNumber;
            inValue.adjustedPrice = adjustedPrice;
            QuantumConcepts.Common.QCConnectWS.CreatePurchaseForLatestVersionResponse retVal = ((QuantumConcepts.Common.QCConnectWS.ServiceSoap)(this)).CreatePurchaseForLatestVersion(inValue);
            return retVal.CreatePurchaseForLatestVersionResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult QuantumConcepts.Common.QCConnectWS.ServiceSoap.BeginCreatePurchaseForLatestVersion(QuantumConcepts.Common.QCConnectWS.CreatePurchaseForLatestVersionRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginCreatePurchaseForLatestVersion(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginCreatePurchaseForLatestVersion(QuantumConcepts.Common.QCConnectWS.Authorization Authorization, System.Nullable<int> userID, string applicationKey, QuantumConcepts.Common.QCConnectWS.ApplicationVersionDistributionPublisher publisher, string referenceNumber, decimal adjustedPrice, System.AsyncCallback callback, object asyncState) {
            QuantumConcepts.Common.QCConnectWS.CreatePurchaseForLatestVersionRequest inValue = new QuantumConcepts.Common.QCConnectWS.CreatePurchaseForLatestVersionRequest();
            inValue.Authorization = Authorization;
            inValue.userID = userID;
            inValue.applicationKey = applicationKey;
            inValue.publisher = publisher;
            inValue.referenceNumber = referenceNumber;
            inValue.adjustedPrice = adjustedPrice;
            return ((QuantumConcepts.Common.QCConnectWS.ServiceSoap)(this)).BeginCreatePurchaseForLatestVersion(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        QuantumConcepts.Common.QCConnectWS.CreatePurchaseForLatestVersionResponse QuantumConcepts.Common.QCConnectWS.ServiceSoap.EndCreatePurchaseForLatestVersion(System.IAsyncResult result) {
            return base.Channel.EndCreatePurchaseForLatestVersion(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public QuantumConcepts.Common.QCConnectWS.Purchase EndCreatePurchaseForLatestVersion(System.IAsyncResult result) {
            QuantumConcepts.Common.QCConnectWS.CreatePurchaseForLatestVersionResponse retVal = ((QuantumConcepts.Common.QCConnectWS.ServiceSoap)(this)).EndCreatePurchaseForLatestVersion(result);
            return retVal.CreatePurchaseForLatestVersionResult;
        }
        
        private System.IAsyncResult OnBeginCreatePurchaseForLatestVersion(object[] inValues, System.AsyncCallback callback, object asyncState) {
            QuantumConcepts.Common.QCConnectWS.Authorization Authorization = ((QuantumConcepts.Common.QCConnectWS.Authorization)(inValues[0]));
            System.Nullable<int> userID = ((System.Nullable<int>)(inValues[1]));
            string applicationKey = ((string)(inValues[2]));
            QuantumConcepts.Common.QCConnectWS.ApplicationVersionDistributionPublisher publisher = ((QuantumConcepts.Common.QCConnectWS.ApplicationVersionDistributionPublisher)(inValues[3]));
            string referenceNumber = ((string)(inValues[4]));
            decimal adjustedPrice = ((decimal)(inValues[5]));
            return this.BeginCreatePurchaseForLatestVersion(Authorization, userID, applicationKey, publisher, referenceNumber, adjustedPrice, callback, asyncState);
        }
        
        private object[] OnEndCreatePurchaseForLatestVersion(System.IAsyncResult result) {
            QuantumConcepts.Common.QCConnectWS.Purchase retVal = this.EndCreatePurchaseForLatestVersion(result);
            return new object[] {
                    retVal};
        }
        
        private void OnCreatePurchaseForLatestVersionCompleted(object state) {
            if ((this.CreatePurchaseForLatestVersionCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CreatePurchaseForLatestVersionCompleted(this, new CreatePurchaseForLatestVersionCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CreatePurchaseForLatestVersionAsync(QuantumConcepts.Common.QCConnectWS.Authorization Authorization, System.Nullable<int> userID, string applicationKey, QuantumConcepts.Common.QCConnectWS.ApplicationVersionDistributionPublisher publisher, string referenceNumber, decimal adjustedPrice) {
            this.CreatePurchaseForLatestVersionAsync(Authorization, userID, applicationKey, publisher, referenceNumber, adjustedPrice, null);
        }
        
        public void CreatePurchaseForLatestVersionAsync(QuantumConcepts.Common.QCConnectWS.Authorization Authorization, System.Nullable<int> userID, string applicationKey, QuantumConcepts.Common.QCConnectWS.ApplicationVersionDistributionPublisher publisher, string referenceNumber, decimal adjustedPrice, object userState) {
            if ((this.onBeginCreatePurchaseForLatestVersionDelegate == null)) {
                this.onBeginCreatePurchaseForLatestVersionDelegate = new BeginOperationDelegate(this.OnBeginCreatePurchaseForLatestVersion);
            }
            if ((this.onEndCreatePurchaseForLatestVersionDelegate == null)) {
                this.onEndCreatePurchaseForLatestVersionDelegate = new EndOperationDelegate(this.OnEndCreatePurchaseForLatestVersion);
            }
            if ((this.onCreatePurchaseForLatestVersionCompletedDelegate == null)) {
                this.onCreatePurchaseForLatestVersionCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCreatePurchaseForLatestVersionCompleted);
            }
            base.InvokeAsync(this.onBeginCreatePurchaseForLatestVersionDelegate, new object[] {
                        Authorization,
                        userID,
                        applicationKey,
                        publisher,
                        referenceNumber,
                        adjustedPrice}, this.onEndCreatePurchaseForLatestVersionDelegate, this.onCreatePurchaseForLatestVersionCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        QuantumConcepts.Common.QCConnectWS.CreatePurchaseResponse QuantumConcepts.Common.QCConnectWS.ServiceSoap.CreatePurchase(QuantumConcepts.Common.QCConnectWS.CreatePurchaseRequest request) {
            return base.Channel.CreatePurchase(request);
        }
        
        public QuantumConcepts.Common.QCConnectWS.Purchase CreatePurchase(QuantumConcepts.Common.QCConnectWS.Authorization Authorization, System.Nullable<int> userID, string applicationKey, int major, int minor, int build, int revision, QuantumConcepts.Common.QCConnectWS.ApplicationVersionDistributionPublisher publisher, string referenceNumber, decimal adjustedPrice) {
            QuantumConcepts.Common.QCConnectWS.CreatePurchaseRequest inValue = new QuantumConcepts.Common.QCConnectWS.CreatePurchaseRequest();
            inValue.Authorization = Authorization;
            inValue.userID = userID;
            inValue.applicationKey = applicationKey;
            inValue.major = major;
            inValue.minor = minor;
            inValue.build = build;
            inValue.revision = revision;
            inValue.publisher = publisher;
            inValue.referenceNumber = referenceNumber;
            inValue.adjustedPrice = adjustedPrice;
            QuantumConcepts.Common.QCConnectWS.CreatePurchaseResponse retVal = ((QuantumConcepts.Common.QCConnectWS.ServiceSoap)(this)).CreatePurchase(inValue);
            return retVal.CreatePurchaseResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult QuantumConcepts.Common.QCConnectWS.ServiceSoap.BeginCreatePurchase(QuantumConcepts.Common.QCConnectWS.CreatePurchaseRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginCreatePurchase(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginCreatePurchase(QuantumConcepts.Common.QCConnectWS.Authorization Authorization, System.Nullable<int> userID, string applicationKey, int major, int minor, int build, int revision, QuantumConcepts.Common.QCConnectWS.ApplicationVersionDistributionPublisher publisher, string referenceNumber, decimal adjustedPrice, System.AsyncCallback callback, object asyncState) {
            QuantumConcepts.Common.QCConnectWS.CreatePurchaseRequest inValue = new QuantumConcepts.Common.QCConnectWS.CreatePurchaseRequest();
            inValue.Authorization = Authorization;
            inValue.userID = userID;
            inValue.applicationKey = applicationKey;
            inValue.major = major;
            inValue.minor = minor;
            inValue.build = build;
            inValue.revision = revision;
            inValue.publisher = publisher;
            inValue.referenceNumber = referenceNumber;
            inValue.adjustedPrice = adjustedPrice;
            return ((QuantumConcepts.Common.QCConnectWS.ServiceSoap)(this)).BeginCreatePurchase(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        QuantumConcepts.Common.QCConnectWS.CreatePurchaseResponse QuantumConcepts.Common.QCConnectWS.ServiceSoap.EndCreatePurchase(System.IAsyncResult result) {
            return base.Channel.EndCreatePurchase(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public QuantumConcepts.Common.QCConnectWS.Purchase EndCreatePurchase(System.IAsyncResult result) {
            QuantumConcepts.Common.QCConnectWS.CreatePurchaseResponse retVal = ((QuantumConcepts.Common.QCConnectWS.ServiceSoap)(this)).EndCreatePurchase(result);
            return retVal.CreatePurchaseResult;
        }
        
        private System.IAsyncResult OnBeginCreatePurchase(object[] inValues, System.AsyncCallback callback, object asyncState) {
            QuantumConcepts.Common.QCConnectWS.Authorization Authorization = ((QuantumConcepts.Common.QCConnectWS.Authorization)(inValues[0]));
            System.Nullable<int> userID = ((System.Nullable<int>)(inValues[1]));
            string applicationKey = ((string)(inValues[2]));
            int major = ((int)(inValues[3]));
            int minor = ((int)(inValues[4]));
            int build = ((int)(inValues[5]));
            int revision = ((int)(inValues[6]));
            QuantumConcepts.Common.QCConnectWS.ApplicationVersionDistributionPublisher publisher = ((QuantumConcepts.Common.QCConnectWS.ApplicationVersionDistributionPublisher)(inValues[7]));
            string referenceNumber = ((string)(inValues[8]));
            decimal adjustedPrice = ((decimal)(inValues[9]));
            return this.BeginCreatePurchase(Authorization, userID, applicationKey, major, minor, build, revision, publisher, referenceNumber, adjustedPrice, callback, asyncState);
        }
        
        private object[] OnEndCreatePurchase(System.IAsyncResult result) {
            QuantumConcepts.Common.QCConnectWS.Purchase retVal = this.EndCreatePurchase(result);
            return new object[] {
                    retVal};
        }
        
        private void OnCreatePurchaseCompleted(object state) {
            if ((this.CreatePurchaseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CreatePurchaseCompleted(this, new CreatePurchaseCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CreatePurchaseAsync(QuantumConcepts.Common.QCConnectWS.Authorization Authorization, System.Nullable<int> userID, string applicationKey, int major, int minor, int build, int revision, QuantumConcepts.Common.QCConnectWS.ApplicationVersionDistributionPublisher publisher, string referenceNumber, decimal adjustedPrice) {
            this.CreatePurchaseAsync(Authorization, userID, applicationKey, major, minor, build, revision, publisher, referenceNumber, adjustedPrice, null);
        }
        
        public void CreatePurchaseAsync(QuantumConcepts.Common.QCConnectWS.Authorization Authorization, System.Nullable<int> userID, string applicationKey, int major, int minor, int build, int revision, QuantumConcepts.Common.QCConnectWS.ApplicationVersionDistributionPublisher publisher, string referenceNumber, decimal adjustedPrice, object userState) {
            if ((this.onBeginCreatePurchaseDelegate == null)) {
                this.onBeginCreatePurchaseDelegate = new BeginOperationDelegate(this.OnBeginCreatePurchase);
            }
            if ((this.onEndCreatePurchaseDelegate == null)) {
                this.onEndCreatePurchaseDelegate = new EndOperationDelegate(this.OnEndCreatePurchase);
            }
            if ((this.onCreatePurchaseCompletedDelegate == null)) {
                this.onCreatePurchaseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCreatePurchaseCompleted);
            }
            base.InvokeAsync(this.onBeginCreatePurchaseDelegate, new object[] {
                        Authorization,
                        userID,
                        applicationKey,
                        major,
                        minor,
                        build,
                        revision,
                        publisher,
                        referenceNumber,
                        adjustedPrice}, this.onEndCreatePurchaseDelegate, this.onCreatePurchaseCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        QuantumConcepts.Common.QCConnectWS.GetApplicationByKeyResponse QuantumConcepts.Common.QCConnectWS.ServiceSoap.GetApplicationByKey(QuantumConcepts.Common.QCConnectWS.GetApplicationByKeyRequest request) {
            return base.Channel.GetApplicationByKey(request);
        }
        
        public QuantumConcepts.Common.QCConnectWS.Application GetApplicationByKey(QuantumConcepts.Common.QCConnectWS.Authorization Authorization, string key) {
            QuantumConcepts.Common.QCConnectWS.GetApplicationByKeyRequest inValue = new QuantumConcepts.Common.QCConnectWS.GetApplicationByKeyRequest();
            inValue.Authorization = Authorization;
            inValue.key = key;
            QuantumConcepts.Common.QCConnectWS.GetApplicationByKeyResponse retVal = ((QuantumConcepts.Common.QCConnectWS.ServiceSoap)(this)).GetApplicationByKey(inValue);
            return retVal.GetApplicationByKeyResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult QuantumConcepts.Common.QCConnectWS.ServiceSoap.BeginGetApplicationByKey(QuantumConcepts.Common.QCConnectWS.GetApplicationByKeyRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetApplicationByKey(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetApplicationByKey(QuantumConcepts.Common.QCConnectWS.Authorization Authorization, string key, System.AsyncCallback callback, object asyncState) {
            QuantumConcepts.Common.QCConnectWS.GetApplicationByKeyRequest inValue = new QuantumConcepts.Common.QCConnectWS.GetApplicationByKeyRequest();
            inValue.Authorization = Authorization;
            inValue.key = key;
            return ((QuantumConcepts.Common.QCConnectWS.ServiceSoap)(this)).BeginGetApplicationByKey(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        QuantumConcepts.Common.QCConnectWS.GetApplicationByKeyResponse QuantumConcepts.Common.QCConnectWS.ServiceSoap.EndGetApplicationByKey(System.IAsyncResult result) {
            return base.Channel.EndGetApplicationByKey(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public QuantumConcepts.Common.QCConnectWS.Application EndGetApplicationByKey(System.IAsyncResult result) {
            QuantumConcepts.Common.QCConnectWS.GetApplicationByKeyResponse retVal = ((QuantumConcepts.Common.QCConnectWS.ServiceSoap)(this)).EndGetApplicationByKey(result);
            return retVal.GetApplicationByKeyResult;
        }
        
        private System.IAsyncResult OnBeginGetApplicationByKey(object[] inValues, System.AsyncCallback callback, object asyncState) {
            QuantumConcepts.Common.QCConnectWS.Authorization Authorization = ((QuantumConcepts.Common.QCConnectWS.Authorization)(inValues[0]));
            string key = ((string)(inValues[1]));
            return this.BeginGetApplicationByKey(Authorization, key, callback, asyncState);
        }
        
        private object[] OnEndGetApplicationByKey(System.IAsyncResult result) {
            QuantumConcepts.Common.QCConnectWS.Application retVal = this.EndGetApplicationByKey(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetApplicationByKeyCompleted(object state) {
            if ((this.GetApplicationByKeyCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetApplicationByKeyCompleted(this, new GetApplicationByKeyCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetApplicationByKeyAsync(QuantumConcepts.Common.QCConnectWS.Authorization Authorization, string key) {
            this.GetApplicationByKeyAsync(Authorization, key, null);
        }
        
        public void GetApplicationByKeyAsync(QuantumConcepts.Common.QCConnectWS.Authorization Authorization, string key, object userState) {
            if ((this.onBeginGetApplicationByKeyDelegate == null)) {
                this.onBeginGetApplicationByKeyDelegate = new BeginOperationDelegate(this.OnBeginGetApplicationByKey);
            }
            if ((this.onEndGetApplicationByKeyDelegate == null)) {
                this.onEndGetApplicationByKeyDelegate = new EndOperationDelegate(this.OnEndGetApplicationByKey);
            }
            if ((this.onGetApplicationByKeyCompletedDelegate == null)) {
                this.onGetApplicationByKeyCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetApplicationByKeyCompleted);
            }
            base.InvokeAsync(this.onBeginGetApplicationByKeyDelegate, new object[] {
                        Authorization,
                        key}, this.onEndGetApplicationByKeyDelegate, this.onGetApplicationByKeyCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        QuantumConcepts.Common.QCConnectWS.GetApplicationVersionByApplicationIDAndVersionResponse QuantumConcepts.Common.QCConnectWS.ServiceSoap.GetApplicationVersionByApplicationIDAndVersion(QuantumConcepts.Common.QCConnectWS.GetApplicationVersionByApplicationIDAndVersionRequest request) {
            return base.Channel.GetApplicationVersionByApplicationIDAndVersion(request);
        }
        
        public QuantumConcepts.Common.QCConnectWS.ApplicationVersion GetApplicationVersionByApplicationIDAndVersion(QuantumConcepts.Common.QCConnectWS.Authorization Authorization, int applicationID, int major, int minor, int build, int revision) {
            QuantumConcepts.Common.QCConnectWS.GetApplicationVersionByApplicationIDAndVersionRequest inValue = new QuantumConcepts.Common.QCConnectWS.GetApplicationVersionByApplicationIDAndVersionRequest();
            inValue.Authorization = Authorization;
            inValue.applicationID = applicationID;
            inValue.major = major;
            inValue.minor = minor;
            inValue.build = build;
            inValue.revision = revision;
            QuantumConcepts.Common.QCConnectWS.GetApplicationVersionByApplicationIDAndVersionResponse retVal = ((QuantumConcepts.Common.QCConnectWS.ServiceSoap)(this)).GetApplicationVersionByApplicationIDAndVersion(inValue);
            return retVal.GetApplicationVersionByApplicationIDAndVersionResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult QuantumConcepts.Common.QCConnectWS.ServiceSoap.BeginGetApplicationVersionByApplicationIDAndVersion(QuantumConcepts.Common.QCConnectWS.GetApplicationVersionByApplicationIDAndVersionRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetApplicationVersionByApplicationIDAndVersion(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetApplicationVersionByApplicationIDAndVersion(QuantumConcepts.Common.QCConnectWS.Authorization Authorization, int applicationID, int major, int minor, int build, int revision, System.AsyncCallback callback, object asyncState) {
            QuantumConcepts.Common.QCConnectWS.GetApplicationVersionByApplicationIDAndVersionRequest inValue = new QuantumConcepts.Common.QCConnectWS.GetApplicationVersionByApplicationIDAndVersionRequest();
            inValue.Authorization = Authorization;
            inValue.applicationID = applicationID;
            inValue.major = major;
            inValue.minor = minor;
            inValue.build = build;
            inValue.revision = revision;
            return ((QuantumConcepts.Common.QCConnectWS.ServiceSoap)(this)).BeginGetApplicationVersionByApplicationIDAndVersion(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        QuantumConcepts.Common.QCConnectWS.GetApplicationVersionByApplicationIDAndVersionResponse QuantumConcepts.Common.QCConnectWS.ServiceSoap.EndGetApplicationVersionByApplicationIDAndVersion(System.IAsyncResult result) {
            return base.Channel.EndGetApplicationVersionByApplicationIDAndVersion(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public QuantumConcepts.Common.QCConnectWS.ApplicationVersion EndGetApplicationVersionByApplicationIDAndVersion(System.IAsyncResult result) {
            QuantumConcepts.Common.QCConnectWS.GetApplicationVersionByApplicationIDAndVersionResponse retVal = ((QuantumConcepts.Common.QCConnectWS.ServiceSoap)(this)).EndGetApplicationVersionByApplicationIDAndVersion(result);
            return retVal.GetApplicationVersionByApplicationIDAndVersionResult;
        }
        
        private System.IAsyncResult OnBeginGetApplicationVersionByApplicationIDAndVersion(object[] inValues, System.AsyncCallback callback, object asyncState) {
            QuantumConcepts.Common.QCConnectWS.Authorization Authorization = ((QuantumConcepts.Common.QCConnectWS.Authorization)(inValues[0]));
            int applicationID = ((int)(inValues[1]));
            int major = ((int)(inValues[2]));
            int minor = ((int)(inValues[3]));
            int build = ((int)(inValues[4]));
            int revision = ((int)(inValues[5]));
            return this.BeginGetApplicationVersionByApplicationIDAndVersion(Authorization, applicationID, major, minor, build, revision, callback, asyncState);
        }
        
        private object[] OnEndGetApplicationVersionByApplicationIDAndVersion(System.IAsyncResult result) {
            QuantumConcepts.Common.QCConnectWS.ApplicationVersion retVal = this.EndGetApplicationVersionByApplicationIDAndVersion(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetApplicationVersionByApplicationIDAndVersionCompleted(object state) {
            if ((this.GetApplicationVersionByApplicationIDAndVersionCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetApplicationVersionByApplicationIDAndVersionCompleted(this, new GetApplicationVersionByApplicationIDAndVersionCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetApplicationVersionByApplicationIDAndVersionAsync(QuantumConcepts.Common.QCConnectWS.Authorization Authorization, int applicationID, int major, int minor, int build, int revision) {
            this.GetApplicationVersionByApplicationIDAndVersionAsync(Authorization, applicationID, major, minor, build, revision, null);
        }
        
        public void GetApplicationVersionByApplicationIDAndVersionAsync(QuantumConcepts.Common.QCConnectWS.Authorization Authorization, int applicationID, int major, int minor, int build, int revision, object userState) {
            if ((this.onBeginGetApplicationVersionByApplicationIDAndVersionDelegate == null)) {
                this.onBeginGetApplicationVersionByApplicationIDAndVersionDelegate = new BeginOperationDelegate(this.OnBeginGetApplicationVersionByApplicationIDAndVersion);
            }
            if ((this.onEndGetApplicationVersionByApplicationIDAndVersionDelegate == null)) {
                this.onEndGetApplicationVersionByApplicationIDAndVersionDelegate = new EndOperationDelegate(this.OnEndGetApplicationVersionByApplicationIDAndVersion);
            }
            if ((this.onGetApplicationVersionByApplicationIDAndVersionCompletedDelegate == null)) {
                this.onGetApplicationVersionByApplicationIDAndVersionCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetApplicationVersionByApplicationIDAndVersionCompleted);
            }
            base.InvokeAsync(this.onBeginGetApplicationVersionByApplicationIDAndVersionDelegate, new object[] {
                        Authorization,
                        applicationID,
                        major,
                        minor,
                        build,
                        revision}, this.onEndGetApplicationVersionByApplicationIDAndVersionDelegate, this.onGetApplicationVersionByApplicationIDAndVersionCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        QuantumConcepts.Common.QCConnectWS.GetLatestApplicationVersionByApplicationIDResponse QuantumConcepts.Common.QCConnectWS.ServiceSoap.GetLatestApplicationVersionByApplicationID(QuantumConcepts.Common.QCConnectWS.GetLatestApplicationVersionByApplicationIDRequest request) {
            return base.Channel.GetLatestApplicationVersionByApplicationID(request);
        }
        
        public QuantumConcepts.Common.QCConnectWS.ApplicationVersion GetLatestApplicationVersionByApplicationID(QuantumConcepts.Common.QCConnectWS.Authorization Authorization, int applicationID) {
            QuantumConcepts.Common.QCConnectWS.GetLatestApplicationVersionByApplicationIDRequest inValue = new QuantumConcepts.Common.QCConnectWS.GetLatestApplicationVersionByApplicationIDRequest();
            inValue.Authorization = Authorization;
            inValue.applicationID = applicationID;
            QuantumConcepts.Common.QCConnectWS.GetLatestApplicationVersionByApplicationIDResponse retVal = ((QuantumConcepts.Common.QCConnectWS.ServiceSoap)(this)).GetLatestApplicationVersionByApplicationID(inValue);
            return retVal.GetLatestApplicationVersionByApplicationIDResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult QuantumConcepts.Common.QCConnectWS.ServiceSoap.BeginGetLatestApplicationVersionByApplicationID(QuantumConcepts.Common.QCConnectWS.GetLatestApplicationVersionByApplicationIDRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetLatestApplicationVersionByApplicationID(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetLatestApplicationVersionByApplicationID(QuantumConcepts.Common.QCConnectWS.Authorization Authorization, int applicationID, System.AsyncCallback callback, object asyncState) {
            QuantumConcepts.Common.QCConnectWS.GetLatestApplicationVersionByApplicationIDRequest inValue = new QuantumConcepts.Common.QCConnectWS.GetLatestApplicationVersionByApplicationIDRequest();
            inValue.Authorization = Authorization;
            inValue.applicationID = applicationID;
            return ((QuantumConcepts.Common.QCConnectWS.ServiceSoap)(this)).BeginGetLatestApplicationVersionByApplicationID(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        QuantumConcepts.Common.QCConnectWS.GetLatestApplicationVersionByApplicationIDResponse QuantumConcepts.Common.QCConnectWS.ServiceSoap.EndGetLatestApplicationVersionByApplicationID(System.IAsyncResult result) {
            return base.Channel.EndGetLatestApplicationVersionByApplicationID(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public QuantumConcepts.Common.QCConnectWS.ApplicationVersion EndGetLatestApplicationVersionByApplicationID(System.IAsyncResult result) {
            QuantumConcepts.Common.QCConnectWS.GetLatestApplicationVersionByApplicationIDResponse retVal = ((QuantumConcepts.Common.QCConnectWS.ServiceSoap)(this)).EndGetLatestApplicationVersionByApplicationID(result);
            return retVal.GetLatestApplicationVersionByApplicationIDResult;
        }
        
        private System.IAsyncResult OnBeginGetLatestApplicationVersionByApplicationID(object[] inValues, System.AsyncCallback callback, object asyncState) {
            QuantumConcepts.Common.QCConnectWS.Authorization Authorization = ((QuantumConcepts.Common.QCConnectWS.Authorization)(inValues[0]));
            int applicationID = ((int)(inValues[1]));
            return this.BeginGetLatestApplicationVersionByApplicationID(Authorization, applicationID, callback, asyncState);
        }
        
        private object[] OnEndGetLatestApplicationVersionByApplicationID(System.IAsyncResult result) {
            QuantumConcepts.Common.QCConnectWS.ApplicationVersion retVal = this.EndGetLatestApplicationVersionByApplicationID(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetLatestApplicationVersionByApplicationIDCompleted(object state) {
            if ((this.GetLatestApplicationVersionByApplicationIDCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetLatestApplicationVersionByApplicationIDCompleted(this, new GetLatestApplicationVersionByApplicationIDCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetLatestApplicationVersionByApplicationIDAsync(QuantumConcepts.Common.QCConnectWS.Authorization Authorization, int applicationID) {
            this.GetLatestApplicationVersionByApplicationIDAsync(Authorization, applicationID, null);
        }
        
        public void GetLatestApplicationVersionByApplicationIDAsync(QuantumConcepts.Common.QCConnectWS.Authorization Authorization, int applicationID, object userState) {
            if ((this.onBeginGetLatestApplicationVersionByApplicationIDDelegate == null)) {
                this.onBeginGetLatestApplicationVersionByApplicationIDDelegate = new BeginOperationDelegate(this.OnBeginGetLatestApplicationVersionByApplicationID);
            }
            if ((this.onEndGetLatestApplicationVersionByApplicationIDDelegate == null)) {
                this.onEndGetLatestApplicationVersionByApplicationIDDelegate = new EndOperationDelegate(this.OnEndGetLatestApplicationVersionByApplicationID);
            }
            if ((this.onGetLatestApplicationVersionByApplicationIDCompletedDelegate == null)) {
                this.onGetLatestApplicationVersionByApplicationIDCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetLatestApplicationVersionByApplicationIDCompleted);
            }
            base.InvokeAsync(this.onBeginGetLatestApplicationVersionByApplicationIDDelegate, new object[] {
                        Authorization,
                        applicationID}, this.onEndGetLatestApplicationVersionByApplicationIDDelegate, this.onGetLatestApplicationVersionByApplicationIDCompletedDelegate, userState);
        }
    }
}
